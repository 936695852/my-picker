{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///my-picker.min.js","webpack:///webpack/bootstrap 65a539322081fbdf4eea","webpack:///./dist/my-picker.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","myJquery","default","document","WHEEL_HEIGHT","WHEEL_ITEM_ANGLE","WHEEL_ITEM_HIGHT","WHEEL_TRANSITION_TIME","_isIE","userAgent","navigator","isIE","matches","tridentMap","4","5","6","7","match","isWebKit","indexOf","isFirefox","animationUtil","startAnimation","fn","stopAnimation","animationId","easeIn","t","b","easeOut","easeInOut","cacheData","y","radius","wheelHeight","ratio","Math","round","max","min","abs","AudioImpl","Audio","audio","tick","volume","play","currentTime","e","console","error","audioImpl","Picker_1","option","Picker","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Col_1","defaultOption_1","wheel3D_1","wheel_1","browserUtil_1","Frame","options","_wheels","_cols","_option","assign","_frame","cols","Array","isArray","push","Col","wheel","_i","_col","isPerspective","Wheel3D","Wheel","body","append","getDOM","that","addSelectItemListener","index","onSelectItem","_i2","setValue","setValues","_visible","showCover","showFrame","hideCover","hideFrame","close","forEach","destroy","list","defaultValue","setOptions","getOptions","selectOption","values","getValue","colOption","prefix","suffix","labelKey","valueKey","type","item","defaultOptions","onOkClick","onCancelClick","fontSize","hasVoice","title","buttons","zIndex","_typeof","Symbol","iterator","obj","constructor","domUtil_1","animationUtil_1","constant_1","perspectiveConversion","picker","col","startDrag","event","currentTarget","offsetTop","parentElement","offsetY","touches","clientY","drag","endDrag","maxAngle","minAngle","sqrt","visibleAngle","em","window","innerWidth","innerHeight","originalAngle","lastIndexAngle","changeMaxAngle","angle","selectedIndex","speed","timeStamp","lastY","isDraging","valueHashMap","onSelectItemCallbackList","dom","css","contains","find","acos","PI","itemValueKey","addEventListener","setSuffix","setPrefix","Date","now","parent","changeAngle","setAngle","calcSelectedIndexByAngle","selectIndex","selectedValue","isInti","arguments","undefined","html","label","height","li","text","data","clickHandle","stopPropagation","preventDefault","flushLabel","showAnimation","calcAngleBySelectedIndex","start","_run","_angle","oldSelectedIndex","toggleSelected","rangeAngle","visible","each","eq","_this","filter","_fn","global","$","buildHTML","selector","trim","startsWith","div","createElement","innerHTML","children","buildFragment","fragment","textContent","appendChild","insertDom","targets","clone","access","myjq","setter","toCamelCase","replace","splitChar","toUpperCase","domClone","hasSystem","cloneNode","dataKey","clearData","arr","nodeType","createDocumentFragment","$$mjid","random","init","doms","querySelectorAll","isNaN","add","child","appendTo","prepend","childNodes","insertBefore","prependTo","after","parentNode","lastChild","nextSibling","insertAfter","before","remove","removeChild","attr","setAttribute","getAttribute","removeAttr","addClass","className","classList","removeClass","hasClass","toggleClass","prop","val","hide","style","display","show","on","eventName","cacheFn","cacheEvent","off","tempArr","removeEventListener","toggle","requestAnimationFrame","cancelAnimationFrame","lastTime","vendors","x","callback","element","currTime","getTime","timeToCall","id","setTimeout","cancelRequestAnimationFrame","clearTimeout","0","1","2","3","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","maxDistance","minDistance","originalDistance","lastIndexDistance","changeMaxDistance","distance","changeDistance","setDistance","calcSelectedIndexByDistance","calcDistanceBySelectedIndex","_Distance","rangeDistance","_interopRequireDefault","cover","_domUtil2","frame","_constant2","_browserUtil2","_resizeHandle","documentElement","clientWidth","clientHeight","bind","_domUtil","_constant","_browserUtil"],"mappings":"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","file":"my-picker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar myJquery = __webpack_require__(11);\nexports.default = myJquery(document);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    //滚轮的高度\n    WHEEL_HEIGHT: 85,\n    //在3D透视滚轮中，每个可选项在滚轮上的角度\n    WHEEL_ITEM_ANGLE: 15,\n    //在非3D透视滚轮中，一个滚轮的一个刻度的高度，单位是0.01em\n    // WHEEL_ITEM_HIGHT : 85 - (85 * 41.6 * 2 / 100) ,\n    WHEEL_ITEM_HIGHT: 85 - 85 * 41.6 * 2 / 100,\n    //滚轮因惯性而发生的减速滑动时间\n    WHEEL_TRANSITION_TIME: 400\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _isIE = void 0;\nvar userAgent = navigator.userAgent;\nexports.default = {\n    /**\r\n     * 是否是IE\r\n     * @returns\r\n     */\n    isIE: function isIE() {\n        if (_isIE == null) {\n            _isIE = function () {\n                var matches = void 0;\n                var tridentMap = {\n                    '4': 8,\n                    '5': 9,\n                    '6': 10,\n                    '7': 11\n                };\n                matches = userAgent.match(/MSIE (\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!+matches[1];\n                }\n                matches = userAgent.match(/Trident\\/(\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!tridentMap[matches[1]] || false;\n                }\n                //we did what we could\n                return false;\n            }();\n        }\n        return _isIE;\n    },\n\n    /**\r\n     * 是否是webkit\r\n     * @returns\r\n     */\n    isWebKit: function isWebKit() {\n        return userAgent.indexOf('AppleWebKit') > -1;\n    },\n\n    /**\r\n     * 是否是火狐\r\n     * @returns\r\n     */\n    isFirefox: function isFirefox() {\n        return userAgent.indexOf('Gecko') > -1 && userAgent.indexOf('KHTML') == -1;\n    }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar animationUtil = __webpack_require__(12);\nexports.default = {\n    /**\r\n     * 动画开始函数\r\n     * @param {()=>void} fn             东航的回调\r\n     * @returns {number}                动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return animationUtil.startAnimation(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param {number} animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        animationUtil.stopAnimation(animationId);\n    },\n    /**\r\n     * 渐入效果插值\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeIn: function easeIn(t, b, c, d) {\n        return animationUtil.easeIn(t, b, c, d);\n    },\n    /**\r\n     * 淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return animationUtil.easeOut(t, b, c, d);\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        return animationUtil.easeInOut(t, b, c, d);\n    }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar cacheData = __webpack_require__(13);\n\n/**\r\n * 因为perspectiveConversion是个纯函数,因此可以缓存,这样有利于减少计算,增加动画流畅度。尤其在移动端效果十分明显。\r\n * 计算工作由test/calcIntersectionCache完成,这里只是将其计算结果封装为一个函数\r\n */\nmodule.exports = function (y, radius, wheelHeight) {\n\n    //计算比例\n    var ratio = Math.round(y * 200 / wheelHeight);\n    ratio = Math.max(-100, ratio);\n    ratio = Math.min(100, ratio);\n    return y < 0 ? -1 * cacheData[Math.abs(ratio)] : cacheData[Math.abs(ratio)];\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * 滚轮滚动时候发声的函数,是一个单例模式\r\n */\nvar tick = __webpack_require__(14);\n\nfunction AudioImpl() {\n    if (Audio) {\n        this.audio = new Audio(tick);\n        this.audio.volume = 0.2;\n    }\n}\n\nAudioImpl.prototype.play = function () {\n    try {\n        if (this.audio) {\n            this.audio.currentTime = 0;\n            this.audio.play();\n        }\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nvar audioImpl;\n\nmodule.exports = function () {\n    if (audioImpl) {\n        return audioImpl;\n    } else {\n        audioImpl = new AudioImpl();\n        return audioImpl;\n    }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Picker_1 = __webpack_require__(7);\nmodule.exports = function (option) {\n    return new Picker_1.Picker(option);\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Col_1 = __webpack_require__(8);\nvar defaultOption_1 = __webpack_require__(9);\nvar wheel3D_1 = __webpack_require__(10);\nvar wheel_1 = __webpack_require__(15);\nvar browserUtil_1 = __webpack_require__(2);\nvar Frame = __webpack_require__(16);\n__webpack_require__(17);\n\nvar Picker = function () {\n    function Picker(options) {\n        _classCallCheck(this, Picker);\n\n        //滚轮列表\n        this._wheels = [];\n        //主框架\n        this._cols = [];\n        //用用户配置,覆盖默认配置,生成当前控件的实例的配置\n        this._option = Object.assign({}, defaultOption_1.default, options);\n        //主架\n        this._frame = new Frame(this, this._option);\n        //解析cols属性,将其转换为Cols的数组\n        var cols = [],\n            i = 0;\n        if (Array.isArray(this._option.cols)) {\n            //如果cols为空数组,或者里面的元素是字符串,表示仅一个滚轮,就是cols本身\n            if (this._option.cols.length === 0 || typeof this._option.cols[0] === 'string') {\n                cols.push(new Col_1.Col(this._option.cols));\n            } else {\n                //否则表示数组中的每个元素都是个滚轮\n                for (i = 0; i < this._option.cols.length; i++) {\n                    cols.push(new Col_1.Col(this._option.cols[i]));\n                }\n            }\n        } else {\n            //如果不是数组,表示有cols是一个json形式配置的滚轮\n            cols.push(new Col_1.Col(this._option.cols));\n        }\n        this._cols = cols;\n        //构造滚轮\n        this._wheels = [];\n        var wheel, col;\n        for (var _i = 0; _i < cols.length; _i++) {\n            var _col = cols[_i];\n            //设置滚轮\n            wheel = !browserUtil_1.default.isIE && this._option.isPerspective ? new wheel3D_1.Wheel3D(this, _col, this._option, _i) : new wheel_1.Wheel(this, _col, this._option, _i);\n            this._wheels.push(wheel);\n            this._frame.body().append(wheel.getDOM());\n            //重写wheel的onSelectItem事件\n            var that = this;\n            wheel.addSelectItemListener(function (i) {\n                return function (index, value) {\n                    //如果用户注册了onSelectItem\n                    if (typeof that._option.onSelectItem == 'function') {\n                        that._option.onSelectItem.call(that, i, index, value);\n                    }\n                };\n            }(_i));\n        }\n        for (var _i2 = 0; _i2 < cols.length; _i2++) {\n            //设置滚轮的选项\n            that.setValue(_i2, that._option.setValues[_i2]);\n        }\n        //是否可见\n        this._visible = false;\n    }\n    //是否可见\n\n\n    _createClass(Picker, [{\n        key: \"show\",\n\n        /**\r\n         * 显示\r\n         */\n        value: function show() {\n            this._frame.showCover();\n            this._frame.showFrame();\n            this._visible = true;\n        }\n        /**\r\n         * 隐藏\r\n         */\n\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this._frame.hideCover();\n            this._frame.hideFrame();\n            this._visible = false;\n        }\n        /**\r\n         * 关闭\r\n         */\n\n    }, {\n        key: \"close\",\n        value: function close() {\n            this._frame.close();\n            this._frame.hideCover();\n            this._option = null;\n            this._wheels.forEach(function (wheel) {\n                return wheel.destroy();\n            });\n            this._wheels = null;\n            this._frame = null;\n            this._cols = null;\n        }\n        /**\r\n         * 设置滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {any[]} list      滚轮的可选值列表\r\n         * @param {*} defaultValue  默认值,如果为空会以当前值作为默认值。如果没有当前值会以第一个值作为默认值\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(index, list, defaultValue) {\n            if (this._wheels[index]) this._wheels[index].setOptions(list, defaultValue);\n        }\n        /**\r\n         * 获取滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions(index) {\n            if (this._wheels[index]) {\n                return this._wheels[index].getOptions();\n            } else {\n                return null;\n            }\n        }\n        /**\r\n         * 设置滚轮的可选值\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {*} value         设置的值\r\n         */\n\n    }, {\n        key: \"setValue\",\n        value: function setValue(index, value) {\n            if (this._wheels[index]) this._wheels[index].selectOption(value);\n        }\n        /**\r\n         * 获取滚轮的值,如果index为空表示获取所有滚轮的值\r\n         * @param {number} index    滚轮的index,从0开始记录。如果为空表示获取所有滚轮的值\r\n         */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (index != null) {\n                if (this._wheels[index]) return this._wheels[index].getValue();\n            } else {\n                var values = [];\n                var i;\n                for (i = 0; i < this._cols.length; i++) {\n                    values.push(this._wheels[i].getValue());\n                }\n                return values;\n            }\n        }\n    }, {\n        key: \"visible\",\n        get: function get() {\n            return this._visible;\n        }\n    }]);\n\n    return Picker;\n}();\n\nexports.Picker = Picker;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 将用户数据封装为列对象\r\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Col = function () {\n    function Col(colOption) {\n        _classCallCheck(this, Col);\n\n        this.prefix = \"\";\n        this.suffix = \"\";\n        this.labelKey = \"label\";\n        this.valueKey = \"value\";\n        //列的类型，0：未知 1：字符串数组 2：对象数组\n        this.type = 0;\n        //如果option是一个数组,视为仅存在options的情况\n        if (Array.isArray(colOption)) {\n            this.options = colOption;\n            this.type = 1;\n        } else {\n            this.options = colOption.options || [];\n            if (this.options.length > 0) {\n                if (typeof this.options[0] === 'string') {\n                    this.type = 1;\n                } else {\n                    this.type = 2;\n                }\n            } else {\n                this.type = 0;\n            }\n            this.prefix = colOption.prefix || \"\";\n            this.suffix = colOption.suffix || \"\";\n            this.labelKey = colOption['labelKey'] || this.labelKey;\n            this.valueKey = colOption['valueKey'] || this.valueKey;\n        }\n    }\n\n    _createClass(Col, [{\n        key: \"push\",\n        value: function push(item) {\n            this.options.push(item);\n        }\n    }, {\n        key: \"set\",\n        value: function set(index, item) {\n            if (this.type == 0) {\n                this.type = typeof item === 'string' ? 1 : 2;\n            }\n            this.options[index] = item;\n        }\n    }, {\n        key: \"setCol\",\n        value: function setCol() {}\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.valueKey];\n            }\n        }\n    }, {\n        key: \"getLabel\",\n        value: function getLabel(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.labelKey];\n            }\n        }\n    }]);\n\n    return Col;\n}();\n\nexports.Col = Col;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * 用户默认配置\r\n */\nvar defaultOptions = {\n    cols: [[]],\n    setValues: [],\n    onSelectItem: null,\n    onOkClick: null,\n    onCancelClick: null,\n    fontSize: 15,\n    isPerspective: true,\n    hasVoice: true,\n    title: '',\n    buttons: [\"确定\", \"取消\"],\n    zIndex: 100\n};\nexports.default = defaultOptions;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar animationUtil_1 = __webpack_require__(3);\nvar constant_1 = __webpack_require__(1);\nvar perspectiveConversion = __webpack_require__(4);\nvar tick = __webpack_require__(5)();\n\nvar Wheel3D = function () {\n    function Wheel3D(picker, col, option, index) {\n        _classCallCheck(this, Wheel3D);\n\n        ///////////////////滚轮显示属性\n        //最大转角\n        this.maxAngle = 0;\n        //最小转角,设置可选项列表后需重新计算\n        this.minAngle = 0;\n        //滚轮的实际半径,因为有透视效果,所以滚轮实际半径比容器的高度的一半还小。根据勾股定理,计算得实际半径是容器高度的根号5分之1\n        this.radius = constant_1.default.WHEEL_HEIGHT / Math.sqrt(5);\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        this.visibleAngle = 0;\n        //获取0.01em的实际像素值\n        this.em = function () {\n            return Math.min(window.innerWidth, window.innerHeight) / 100;\n        };\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的转角,用于计算滚轮是否转动过\n        this.originalAngle = 0;\n        //一次拖动过程中滚轮被转动的最大角度\n        this.lastIndexAngle = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        this.changeMaxAngle = 0;\n        //当前滚轮转角\n        this.angle = 0;\n        //当前被选值的index\n        this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        this.isDraging = false;\n        //正在播放的刻度音\n        this.audio = null;\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n        ///////////////////主要属性\n        //picker对象\n        this.picker = picker;\n        //option对象\n        this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        this.index = index;\n        //转轮主体\n        this.dom = domUtil_1.default('<div class=\"picker-wheel3d\">' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '<ul></ul>' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '</div>').css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        this.contains = this.dom.find('ul');\n        ///////////////////滚轮显示属性\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        this.visibleAngle = 90 - Math.acos(this.radius / constant_1.default.WHEEL_HEIGHT * 2) / Math.PI * 180;\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchstart\", startDrag);\n        this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchmove\", drag);\n        this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        this.dom[0].addEventListener(\"touchend\", endDrag);\n        this.dom[0].addEventListener(\"mouseup\", endDrag);\n        this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //初始化标签\n        this.dom.find(\".picker-label\").css(\"transform\", \"translateZ(\" + this.radius / 100 + \"em) scale(0.75)\");\n        //设置标签\n        this.setSuffix(col.suffix);\n        this.setPrefix(col.prefix);\n        this.setOptions(col.options, null, true);\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel3D, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalAngle = this.angle;\n            this.changeMaxAngle = 0;\n            this.lastIndexAngle = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算转角变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeAngle = (perspectiveConversion(this.lastY, this.radius, constant_1.default.WHEEL_HEIGHT) - perspectiveConversion(y, this.radius, constant_1.default.WHEEL_HEIGHT)) / Math.PI * 180;\n            var angle = changeAngle + this.angle;\n            //记录滚轮滚动的最大转角\n            this.changeMaxAngle = Math.max(Math.abs(this.originalAngle - angle), this.changeMaxAngle);\n            //记录当前角度\n            this.setAngle(angle);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeAngle) {\n                this.speed = changeAngle / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的angle。之所以乘4是根据偏移效果经验得到的\n            var changeAngle = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var angle = changeAngle + this.angle;\n            //根据角度计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByAngle(angle);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小转角\n            this.maxAngle = constant_1.default.WHEEL_ITEM_ANGLE * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label,\n\n            //显示标签的dom的高度,要求根据wheelItemAngle计算,使各个标签dom的边缘刚好挨在一起,确保没有空细\n            height = this.radius * Math.PI * constant_1.default.WHEEL_ITEM_ANGLE / 180;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(角度)\n                var li = domUtil_1.default(\"<li></li>\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var angle = constant_1.default.WHEEL_ITEM_ANGLE * -index;\n                //为了解决3d放大后，文字模糊的问题，故采用zoom=2的方案，所以li的尺寸方面，统一缩小一半\n                li.css(\"transform\", \"rotateX(\" + angle + \"deg) translateZ(\" + that.radius / 100 + \"em) scale(0.75)\").css(\"padding\", height / 5.9 / 100 + \"em 0\").css(\"height\", height / 100 + \"em\").css(\"line-height\", height / 100 + \"em\");\n                //将标签的角度保存到其dom中\n                li.data(\"angle\", angle);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxAngle < 1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            //刷新标签\n            this.flushLabel();\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 获得用户可选的标签\r\n        */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var angle = this.calcAngleBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _angle = animationUtil_1.default.easeOut(start, that.angle, angle - that.angle, during);\n                    if (Math.abs(_angle - angle) < 1) {\n                        _angle = angle;\n                    }\n                    that.setAngle(_angle);\n                    if (_angle != angle) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setAngle(angle);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定角度,自动设定标签的各个位置\r\n        * @param {number} angle\t\t要转到的角度\r\n        * @returns {number}\t\t\t修正后的角度,即最终的实际角度\r\n        */\n\n    }, {\n        key: \"setAngle\",\n        value: function setAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = this.rangeAngle(angle);\n            // 如果角度变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexAngle = this.lastIndexAngle;\n                var index = this.calcSelectedIndexByAngle(angle);\n                if (lastIndexAngle != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexAngle = index;\n            }\n            this.contains.css(\"transform\", \"rotateX(\" + angle + \"deg)\");\n            this.angle = angle;\n            this.flushLabel();\n            return angle;\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByAngle\",\n        value: function calcSelectedIndexByAngle(angle) {\n            angle = this.rangeAngle(angle);\n            return Math.round(Math.abs(angle / constant_1.default.WHEEL_ITEM_ANGLE));\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcAngleBySelectedIndex\",\n        value: function calcAngleBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_ANGLE;\n        }\n        /**\r\n        * 限制转角超过极限值\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeAngle\",\n        value: function rangeAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = Math.max(this.minAngle, angle);\n            angle = Math.min(this.maxAngle, angle);\n            return angle;\n        }\n        /**\r\n        * 刷新各个标签的状态,确定应该显示哪些标签\r\n        */\n\n    }, {\n        key: \"flushLabel\",\n        value: function flushLabel() {\n            var that = this;\n            this.dom.find(\"li\").each(function (index, li) {\n                li = domUtil_1.default(li);\n                var angle = li.data(\"angle\") + that.angle;\n                if (angle > that.visibleAngle || angle < -that.visibleAngle) {\n                    if (li.css(\"display\") != \"none\") {\n                        li.css(\"display\", \"none\");\n                    }\n                } else {\n                    if (li.css(\"display\") != \"block\") {\n                        li.css(\"display\", \"block\");\n                    }\n                }\n            });\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n    }]);\n\n    return Wheel3D;\n}();\n\nexports.Wheel3D = Wheel3D;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n(function (global, factory) {\r\n\t\"use strict\"\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\tmodule.exports = factory;\r\n\t} else {\r\n\t\tglobal.$ = factory(global.document);\r\n\t}\r\n})(typeof window !== \"undefined\" ? window : this, function (document) {\r\n\r\n\t//用于插入使用的DocumentFragment\r\n\tvar fragment = document.createDocumentFragment();\r\n\r\n\t//将html解析为my-jquery对象\r\n\tfunction buildHTML(selector) {\r\n\t\tselector = selector.trim();\r\n\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\tif(selector.startsWith(\"<\")){\r\n\t\t\t//用于使用innerHTML生成dom的div\r\n\t\t\tvar div = document.createElement(\"DIV\");\r\n\t\t\tdiv.innerHTML = selector;\r\n\t\t\treturn $(div.children);\r\n\t\t} else {\r\n\t\t\treturn $([]);\r\n\t\t}\r\n\t}\r\n\r\n\t//将html解析为fragment对象\r\n\tfunction buildFragment(dom) {\r\n\t\tvar dom = $(dom);\r\n\t\tfragment.textContent = \"\";\r\n\t\tdom.each(function (i, item) {\r\n\t\t\tfragment.appendChild(item);\r\n\t\t})\r\n\t\treturn fragment;\r\n\t}\r\n\r\n\t//将各种要插入对象做成一个buildFragment,根据fn插入\r\n\tfunction insertDom(targets, dom, fn) {\r\n\t\t//如果插入到的元素是多个,克隆之后再插入\r\n\t\ttargets.each(function (i, item) {\r\n\t\t\tif(i != targets.length-1){\r\n\t\t\t\tfn(this, buildFragment(dom.clone()));\r\n\t\t\t} else {\r\n\t\t\t\tfn(this, buildFragment(dom));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//一个模板,用于生成setter和getter重载函数\r\n\tfunction access(myjq, setter, getter, key, value) {\r\n\t\t//是否是setter方法,如果是setter方法,value不能是undefined\r\n\t\treturn value === undefined ? (myjq.length ? getter(myjq[0], key) : undefined) : myjq.each(function (index, item) {\r\n\t\t\treturn setter(item, key, value)\r\n\t\t})\r\n\t}\r\n\r\n    //短横线隔开式命名转驼峰命名\r\n    function toCamelCase(name) {\r\n        return name.replace(/-\\S/g, function (splitChar) {\r\n            return splitChar[1].toUpperCase();\r\n        });\r\n    }\r\n\r\n    //克隆dom\r\n\tfunction domClone(item, hasSystem) {\r\n\t\tvar dom = item.cloneNode(true);\r\n\t\thasSystem && item[dataKey] && (dom[dataKey] = item[dataKey]);\r\n\r\n\t\treturn dom;\r\n\t}\r\n\r\n\t//删除dom时候使用\r\n\tfunction clearData(item) {\r\n\t\tvar arr;\r\n\t\tif(item.nodeType == 1){\r\n\t\t\tdelete item[dataKey];\r\n\t\t\tarr = item.children;\r\n\t\t} else if(item && item.length != null){\r\n\t\t\tarr = item;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor(var i; i < arr.length; i++){\r\n\t\t\tclearData(arr[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t//防止冲突的id\r\n\tvar $$mjid = (\"\" + Date.now() +  Math.random()).replace('.', '');\r\n\t//dom缓存的key\r\n\tvar dataKey = \"$$mjid\" + $$mjid\r\n\r\n\tvar $ = function(selector){\r\n\t\treturn new $.fn.init(selector);\r\n\t}\r\n\r\n\t$.fn = $.prototype = {\r\n\t\t//唯一id\r\n\t\t$$mjid : $$mjid,\r\n\r\n\t\t//jquery对象原型\r\n\t\tinit : function(selector){\r\n\r\n\t\t\t//如果没有选择器，直接返回\r\n\t\t\tif(!selector){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof selector == \"string\"){\r\n\t\t\t\t//如果是字符串，表示可能是选择器，或者是构建字符串\r\n\t\t\t\tselector = selector.trim();\r\n\t\t\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\t\t\tif(selector.startsWith(\"<\")){\r\n\t\t\t\t\treturn $(buildHTML(selector));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//如果不是，说明是选择器，直接选择\r\n\t\t\t\t\tvar doms = document.querySelectorAll(selector);\r\n\r\n\t\t\t\t\t//递归调用$，从新封装一次\r\n\t\t\t\t\treturn $(doms);\r\n\t\t\t\t}\r\n\t\t\t} else if(typeof selector == \"object\" && !isNaN(selector[\"length\"])){\r\n\t\t\t\t//类似数组就表示是数组。遍历数组或者是$.init对象，如果里面是dom元素封装返回\r\n\t\t\t\tfor(var i = 0,length = 0; i < selector.length; i++){\r\n\t\t\t\t\tvar dom = selector[i];\r\n\t\t\t\t\tif(dom && dom.nodeType == 1){\r\n\t\t\t\t\t\tthis[length] = dom;\r\n\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.length = length;\r\n\t\t\t\treturn this;\r\n\t\t\t} else if(selector.nodeType){\r\n\t\t\t\t//如果本身就是一个dom元素，直接封装返回\r\n\t\t\t\tthis.length = 1;\r\n\t\t\t\tthis[0] = selector;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//使init变为类数组对象\r\n\t\tlength : 0,\r\n\r\n\t\t//模仿each\r\n\t\teach : function (fn) {\r\n\t\t\tfor(var i =0; i < this.length; i++){\r\n\t\t\t\tif(typeof fn == 'function' && fn.call(this[i], i, this[i]) === false){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\teq: function(i){\r\n\t\t\treturn $(this[i]);\r\n\t\t},\r\n\r\n\t\t//往集合增加一个dom\r\n\t\tadd: function (item) {\r\n\t\t\tif(item && item.nodeType == 1){\r\n\t\t\t\tthis[this.length++] = item;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t//在某个节点下面找div\r\n\t\tfind: function(selector){\r\n\t\t\treturn access(this,null,function (dom, selector) {\r\n\t\t\t\treturn $(dom.querySelectorAll(selector));\r\n\t\t\t},selector)\r\n\t\t},\r\n\r\n\t\t//用于将文档增添于\r\n\t\tappend : function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tappendTo: function(parent){\r\n\t\t\t$(parent).append(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprepend: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.childNodes.length ?  parent.insertBefore(child, parent.childNodes[0]) : parent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprependTo: function(parent){\r\n\t\t\t$(parent).prepend(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tafter: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tif(parent.parentNode.lastChild == parent){\r\n\t\t\t\t\tparent.parentNode.appendChild(child);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.parentNode.insertBefore(child, parent.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertAfter: function(parent){\r\n\t\t\t$(parent).after(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tbefore: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.parentNode.insertBefore(child, parent);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertBefore: function(parent){\r\n\t\t\t$(parent).before(this);\r\n\t\t\treturn $(this[0]);\r\n\t\t},\r\n\t\t\r\n\t\tclone: function () {\r\n\t\t\tvar arr = [];\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\tarr.push(domClone(item, true));\r\n\t\t\t})\r\n\t\t\treturn $(arr);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 删除dom\r\n\t\t */\r\n\t\tremove: function () {\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\titem.parentElement && item.parentElement.removeChild(item)\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdata: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tif(!item[dataKey]){\r\n\t\t\t\t\titem[dataKey] = {};\r\n\t\t\t\t}\r\n\t\t\t\titem[dataKey][key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[dataKey] && item[dataKey][key];\r\n\t\t\t}, key, value);\r\n\t\t},\r\n\r\n\t\tattr: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.setAttribute(key, value)\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.getAttribute(key);\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\tremoveAttr: function (key) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(key) {\r\n\t\t\t\t\titem.removeAttr(key);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\taddClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.add(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tremoveClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.remove(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\thasClass: function (className) {\r\n\t\t\treturn this.length ? this[0].classList.contains(className) : false;\r\n\t\t},\r\n\r\n\t\ttoggleClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\tif(item.classList.contains(className)){\r\n\t\t\t\t\t\titem.classList.remove(className);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.classList.add(className);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tprop: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem[key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[key];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\r\n\t\thtml: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tclearData(item.children || {length : 0});\r\n\t\t\t\titem.innerHTML = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.innerHTML;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\ttext: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.textContent = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.textContent;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\tval: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.value = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.value;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\thide: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(item.style.display){\r\n\t\t\t\t\t$(item).data(\"my-jquery-style-display\",item.style.display);\r\n\t\t\t\t}\r\n\t\t\t\titem.style.display=\"none\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tshow: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\titem.style.display= $(item).data(\"my-jquery-style-display\") || \"\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tcss: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.style[toCamelCase(key)] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.style[toCamelCase(key)];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\ton: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                if(typeof fn != 'function'){\r\n                \treturn;\r\n                }\r\n\r\n            \t//注册的函数\r\n            \tvar cacheFn = function (event) {\r\n\t\t\t\t\tif(fn.call(this, event) === false){\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t}\r\n                }\r\n                cacheFn.fn = fn;\r\n\r\n                //缓存该函数\r\n                var cacheEvent = $(item).data(\"my-jquery-event-cache\") || {};\r\n                cacheEvent[eventName] = cacheEvent[eventName] || [];\r\n                cacheEvent[eventName].push(cacheFn)\r\n\r\n                this.addEventListener(eventName, cacheFn, false);\r\n                $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n            })\r\n\t\t},\r\n\t\toff: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                var cacheEvent = $(this).data(\"my-jquery-event-cache\");\r\n\r\n                if(!cacheEvent)\r\n                \treturn;\r\n\r\n                var self = this;\r\n                if(cacheEvent[eventName] instanceof Array){\r\n                \tvar tempArr = [];\r\n                    cacheEvent[eventName].forEach(function (cacheFn) {\r\n                        if(typeof fn == 'function'){\r\n                        \tif( fn == cacheFn.fn){\r\n                                self.removeEventListener(eventName, cacheFn, false);\r\n                            } else {\r\n                                tempArr.push(cacheFn)\r\n                            }\r\n                        } else {\r\n                            self.removeEventListener(eventName, cacheFn, false);\r\n\t\t\t\t\t\t}\r\n                    })\r\n\r\n                    cacheEvent[eventName] = tempArr;\r\n                    $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n                }\r\n            })\r\n\r\n\t\t},\r\n\t\ttoggle: function(eventName){\r\n            return this.each(function (i, item) {\r\n            \tif(typeof this[eventName] == 'function'){\r\n                    this[eventName]();\r\n\t\t\t\t}\r\n            })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t$.fn.init.prototype = $.fn;\r\n\r\n\treturn $;\r\n})\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Created by njz on 16/11/29.\r\n */\n\n// 对动画的封装,支持requestAnimationFrame使用requestAnimationFrame封装。\n// 若览器不支持requestAnimationFrame情况下的回退，回退到使用setTmeout的情况。\nvar requestAnimationFrame, cancelAnimationFrame;\nvar lastTime = 0;\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\nrequestAnimationFrame = requestAnimationFrame || window.requestAnimationFrame || function (callback, element) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n    }, timeToCall);\n    lastTime = currTime + timeToCall;\n    return id;\n};\ncancelAnimationFrame = cancelAnimationFrame || window.cancelAnimationFrame || window.cancelRequestAnimationFrame || function (id) {\n    clearTimeout(id);\n};\n\nmodule.exports = {\n    /**\r\n     * 动画开始函数\r\n     * @param fn\r\n     * @returns {number}        动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return requestAnimationFrame(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        cancelAnimationFrame(animationId);\n    },\n    easeIn: function easeIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n    },\n    /**\r\n     * 淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n        return -c / 2 * (--t * (t - 2) - 1) + b;\n    }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = { \"0\": 0, \"1\": 0.006180474730027776, \"2\": 0.012361758667979887, \"3\": 0.01854466178595427, \"4\": 0.024729995586343003, \"5\": 0.030918573871856408, \"6\": 0.03711121352142655, \"7\": 0.043308735273995536, \"8\": 0.04951196452223301, \"9\": 0.05572173211827738, \"10\": 0.06193887519365582, \"11\": 0.06816423799561012, \"12\": 0.07439867274213974, \"13\": 0.08064304049816978, \"14\": 0.08689821207536214, \"15\": 0.0931650689582126, \"16\": 0.09944450425921704, \"17\": 0.1057374237060475, \"18\": 0.11204474666385271, \"19\": 0.11836740719599605, \"20\": 0.12470635516675682, \"21\": 0.13106255738976524, \"22\": 0.13743699882620672, \"23\": 0.1438306838371266, \"24\": 0.1502446374944947, \"25\": 0.15667990695605222, \"26\": 0.163137562909363, \"27\": 0.16961870109094018, \"28\": 0.1761244438868085, \"29\": 0.18265594202141244, \"30\": 0.189214376342388, \"31\": 0.1958009597093892, \"32\": 0.20241693899591295, \"33\": 0.20906359721390222, \"34\": 0.21574225577183714, \"35\": 0.2224542768780669, \"36\": 0.22920106610229693, \"37\": 0.23598407510944647, \"38\": 0.24280480458155373, \"39\": 0.24966480734504126, \"40\": 0.2565656917224997, \"41\": 0.26350912513022323, \"42\": 0.2704968379450743, \"43\": 0.27753062766690556, \"44\": 0.28461236340577195, \"45\": 0.2917439907265723, \"46\": 0.298927536887646, \"47\": 0.30616511651426775, \"48\": 0.3134589377530486, \"49\": 0.3208113089590395, \"50\": 0.32822464597399087, \"51\": 0.3357014800618854, \"52\": 0.3432444665767064, \"53\": 0.3508563944476478, \"54\": 0.35854019657886727, \"55\": 0.3662989612747276, \"56\": 0.37413594481766604, \"57\": 0.38205458534478537, \"58\": 0.39005851819157766, \"59\": 0.3981515928975172, \"60\": 0.4063378920994586, \"61\": 0.41462175257587425, \"62\": 0.42300778874928274, \"63\": 0.4315009190073606, \"64\": 0.4401063952672662, \"65\": 0.4488298362852176, \"66\": 0.45767726530766856, \"67\": 0.4666551527757603, \"68\": 0.47577046493656705, \"69\": 0.4850307193901132, \"70\": 0.4944440488195467, \"71\": 0.5040192744255141, \"72\": 0.5137659909310855, \"73\": 0.523694665462527, \"74\": 0.5338167531736872, \"75\": 0.5441448332086339, \"76\": 0.5546927695451231, \"77\": 0.5654759025098686, \"78\": 0.5765112784180985, \"79\": 0.5878179270265199, \"80\": 0.5994171995371129, \"81\": 0.6113331840998124, \"82\": 0.6235932216642447, \"83\": 0.6362285534378791, \"84\": 0.6492751433974548, \"85\": 0.6627747373240171, \"86\": 0.6767762470698537, \"87\": 0.6913375909489355, \"88\": 0.7065281883018284, \"89\": 0.7224324166263504, \"90\": 0.7391545276252866, \"91\": 0.7568258524516188, \"92\": 0.7756157498195769, \"93\": 0.7957489855645078, \"94\": 0.8175348626997212, \"95\": 0.8414195586288256, \"96\": 0.8680892494981647, \"97\": 0.8987014263951989, \"98\": 0.935517870959519, \"99\": 0.9843911534692572, \"100\": 1.1071487177940906 };\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"data:audio/x-wav;base64,\"\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar animationUtil_1 = __webpack_require__(3);\nvar browserUtil_1 = __webpack_require__(2);\nvar constant_1 = __webpack_require__(1);\nvar perspectiveConversion = __webpack_require__(4);\nvar tick = __webpack_require__(5)();\n\nvar Wheel = function () {\n    function Wheel(picker, col, option, index) {\n        _classCallCheck(this, Wheel);\n\n        ///////////////////滚轮显示属性\n        //最大位移\n        this.maxDistance = 0;\n        //最小位移,设置可选项列表后需重新计算\n        this.minDistance = 0;\n        //获取0.01em的实际像素值\n        this.em = function () {\n            return Math.min(window.innerWidth, window.innerHeight) / 100;\n        };\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的位移,用于计算滚轮是否转动过\n        this.originalDistance = 0;\n        //一次拖动过程中滚轮被转动的最大位移\n        this.lastIndexDistance = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        this.changeMaxDistance = 0;\n        //当前滚轮位移\n        this.distance = 0;\n        //当前被选值的index\n        this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        this.isDraging = false;\n        //正在播放的刻度音\n        this.audio = null;\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n        ///////////////////主要属性\n        //picker对象\n        this.picker = picker;\n        //option对象\n        this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        this.index = index;\n        //转轮主体\n        this.dom = domUtil_1.default(\"<div class=\\\"picker-wheel\\\">\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n                <ul></ul>\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n            </div>\").css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        this.contains = this.dom.find('ul');\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchstart\", startDrag);\n        this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchmove\", drag);\n        this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        this.dom[0].addEventListener(\"touchend\", endDrag);\n        this.dom[0].addEventListener(\"mouseup\", endDrag);\n        this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //设置标签\n        this.setSuffix(col.suffix);\n        this.setPrefix(col.prefix);\n        this.setOptions(col.options, null, true);\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalDistance = this.distance;\n            this.changeMaxDistance = 0;\n            this.lastIndexDistance = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算位移变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeDistance = this.lastY - y;\n            var distance = changeDistance + this.distance;\n            //记录滚轮滚动的最大位移\n            this.changeMaxDistance = Math.max(Math.abs(this.originalDistance - distance), this.changeMaxDistance);\n            //记录当前位移\n            this.setDistance(distance);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeDistance) {\n                this.speed = changeDistance / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的Distance。之所以乘4是根据偏移效果经验得到的\n            var changeDistance = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var distance = changeDistance + this.distance;\n            //根据位移计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByDistance(distance);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小位移\n            this.maxDistance = constant_1.default.WHEEL_ITEM_HIGHT * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(位移)\n                var li = domUtil_1.default(\"<li></li>\").css('top', constant_1.default.WHEEL_ITEM_HIGHT / 100 * i + \"em\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var distance = constant_1.default.WHEEL_ITEM_HIGHT * -index;\n                //将标签的位移保存到其dom中\n                li.data(\"distance\", distance);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxDistance < 0.1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 获得用户可选的标签\r\n        */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var distance = this.calcDistanceBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _Distance = animationUtil_1.default.easeOut(start, that.distance, distance - that.distance, during);\n                    if (Math.abs(_Distance - distance) < 1) {\n                        _Distance = distance;\n                    }\n                    that.setDistance(_Distance);\n                    if (_Distance != distance) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setDistance(distance);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定位移,自动设定标签的各个位置\r\n        * @param {number} distance\t\t要转到的位移\r\n        * @returns {number}\t\t\t修正后的位移,即最终的实际位移\r\n        */\n\n    }, {\n        key: \"setDistance\",\n        value: function setDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = this.rangeDistance(distance);\n            // 如果位移变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexDistance = this.lastIndexDistance;\n                var index = this.calcSelectedIndexByDistance(distance);\n                if (lastIndexDistance != index && !browserUtil_1.default.isIE) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexDistance = index;\n            }\n            this.contains.css(\"transform\", \"translateY(\" + (constant_1.default.WHEEL_HEIGHT / 2 - constant_1.default.WHEEL_ITEM_HIGHT / 2 - distance) / 100 + \"em)\");\n            this.distance = distance;\n            return distance;\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByDistance\",\n        value: function calcSelectedIndexByDistance(distance) {\n            distance = this.rangeDistance(distance);\n            return Math.round(Math.abs(distance / constant_1.default.WHEEL_ITEM_HIGHT));\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param Distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcDistanceBySelectedIndex\",\n        value: function calcDistanceBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_HIGHT;\n        }\n        /**\r\n        * 限制位移超过极限值\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeDistance\",\n        value: function rangeDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = Math.max(this.minDistance, distance);\n            distance = Math.min(this.maxDistance, distance);\n            return distance;\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n    }]);\n\n    return Wheel;\n}();\n\nexports.Wheel = Wheel;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nvar _constant = __webpack_require__(1);\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nvar _browserUtil = __webpack_require__(2);\n\nvar _browserUtil2 = _interopRequireDefault(_browserUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//构建主框架\nfunction Frame(picker, option) {\n\n\t//picker对象\n\tthis.picker = picker;\n\t//option\n\tthis.option = option;\n\n\t//构建cover\n\tthis.cover = (0, _domUtil2.default)(\"<div class='my-picker-cover' style='z-index: \" + option.zIndex + \"'>\").hide();\n\n\tthis.frame = (0, _domUtil2.default)('<div class=\"picker picker-frame\" style=\"z-index: ' + (option.zIndex + 1) + '\">' + '<header class=\"picker-head\">' + '<a class=\"picker-btn-cancel\"><span class=\"picker-header-text\"></span></a>' + '<h4 class=\"picker-title\"><span class=\"picker-header-text\"></span></h4>' + '<span class=\"picker-selected\">已选0</span>' + '<a class=\"picker-btn-ok\"><span class=\"picker-header-text\"></span></a>' + '</header>' + '<div class=\"picker-body\"></div>' + '</div>').css('height', (_constant2.default.WHEEL_HEIGHT + 15) / 100 + \"em\").hide();\n\tthis.frame.find(\".picker-body\")[0].addEventListener('touchstart', function (event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t});\n\n\t//如果是3d透视模式，增加3d透视的样式\n\tif (!_browserUtil2.default.isIE && this._option.isPerspective) {\n\t\tthis.frame.addClass('s-3d').find(\".picker-body\").css(\"perspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"webkitPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"mozPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"msPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\");\n\t}\n\n\t//设置标题按钮名\n\tthis.frame.find(\".picker-title .picker-header-text\").text(option.title);\n\tthis.frame.find(\".picker-btn-cancel .picker-header-text\").text(option.buttons[1] || '取消');\n\tthis.frame.find(\".picker-btn-ok .picker-header-text\").text(option.buttons[0] || '确定');\n\n\t(0, _domUtil2.default)(\"body\").append(this.frame).append(this.cover);\n\n\t//绑定主架的事件\n\tvar that = this;\n\tthis.frame.find(\".picker-btn-cancel\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onCancelClick == 'function') {\n\t\t\tthat.option.onCancelClick.call(that.picker);\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\tthis.frame.find(\".picker-btn-ok\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onOkClick == 'function') {\n\t\t\tvar result = that.option.onOkClick.call(that.picker, picker.getValue());\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\n\tthis._resizeHandle = function () {\n\t\tthis.frame.css('fontSize', Math.min(document.documentElement.clientWidth, document.documentElement.clientHeight) + 'px');\n\t}.bind(this);\n\n\twindow.addEventListener('resize', this._resizeHandle);\n\tthis._resizeHandle();\n}\n\nFrame.prototype = {\n\t//显示cover\n\tshowCover: function showCover() {\n\t\tthis.cover.show();\n\t\tthis.cover.addClass('s-open');\n\t},\n\t//隐藏cover\n\thideCover: function hideCover() {\n\t\tthis.cover.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.cover.hide();\n\t\t}, 500);\n\t},\n\t//显示frame\n\tshowFrame: function showFrame() {\n\t\tthis.frame.show();\n\t\tthis.frame.addClass('s-open');\n\t},\n\t//显示frame\n\thideFrame: function hideFrame() {\n\t\tthis.frame.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.frame.hide();\n\t\t}, 500);\n\t},\n\tdom: function dom() {\n\t\treturn this.frame;\n\t},\n\tbody: function body() {\n\t\treturn this.frame.find('.picker-body');\n\t},\n\t//关闭\n\tclose: function close() {\n\t\tthis.remove();\n\t\twindow.removeEventListener('resize', this._resizeHandle);\n\t},\n\t//移除\n\tremove: function remove() {\n\t\tthis.frame.remove();\n\t}\n};\n\nmodule.exports = Frame;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=my-picker.js.map\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// my-picker.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 65a539322081fbdf4eea","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar myJquery = __webpack_require__(11);\nexports.default = myJquery(document);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    //滚轮的高度\n    WHEEL_HEIGHT: 85,\n    //在3D透视滚轮中，每个可选项在滚轮上的角度\n    WHEEL_ITEM_ANGLE: 15,\n    //在非3D透视滚轮中，一个滚轮的一个刻度的高度，单位是0.01em\n    // WHEEL_ITEM_HIGHT : 85 - (85 * 41.6 * 2 / 100) ,\n    WHEEL_ITEM_HIGHT: 85 - 85 * 41.6 * 2 / 100,\n    //滚轮因惯性而发生的减速滑动时间\n    WHEEL_TRANSITION_TIME: 400\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _isIE = void 0;\nvar userAgent = navigator.userAgent;\nexports.default = {\n    /**\r\n     * 是否是IE\r\n     * @returns\r\n     */\n    isIE: function isIE() {\n        if (_isIE == null) {\n            _isIE = function () {\n                var matches = void 0;\n                var tridentMap = {\n                    '4': 8,\n                    '5': 9,\n                    '6': 10,\n                    '7': 11\n                };\n                matches = userAgent.match(/MSIE (\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!+matches[1];\n                }\n                matches = userAgent.match(/Trident\\/(\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!tridentMap[matches[1]] || false;\n                }\n                //we did what we could\n                return false;\n            }();\n        }\n        return _isIE;\n    },\n\n    /**\r\n     * 是否是webkit\r\n     * @returns\r\n     */\n    isWebKit: function isWebKit() {\n        return userAgent.indexOf('AppleWebKit') > -1;\n    },\n\n    /**\r\n     * 是否是火狐\r\n     * @returns\r\n     */\n    isFirefox: function isFirefox() {\n        return userAgent.indexOf('Gecko') > -1 && userAgent.indexOf('KHTML') == -1;\n    }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar animationUtil = __webpack_require__(12);\nexports.default = {\n    /**\r\n     * 动画开始函数\r\n     * @param {()=>void} fn             东航的回调\r\n     * @returns {number}                动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return animationUtil.startAnimation(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param {number} animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        animationUtil.stopAnimation(animationId);\n    },\n    /**\r\n     * 渐入效果插值\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeIn: function easeIn(t, b, c, d) {\n        return animationUtil.easeIn(t, b, c, d);\n    },\n    /**\r\n     * 淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return animationUtil.easeOut(t, b, c, d);\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        return animationUtil.easeInOut(t, b, c, d);\n    }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar cacheData = __webpack_require__(13);\n\n/**\r\n * 因为perspectiveConversion是个纯函数,因此可以缓存,这样有利于减少计算,增加动画流畅度。尤其在移动端效果十分明显。\r\n * 计算工作由test/calcIntersectionCache完成,这里只是将其计算结果封装为一个函数\r\n */\nmodule.exports = function (y, radius, wheelHeight) {\n\n    //计算比例\n    var ratio = Math.round(y * 200 / wheelHeight);\n    ratio = Math.max(-100, ratio);\n    ratio = Math.min(100, ratio);\n    return y < 0 ? -1 * cacheData[Math.abs(ratio)] : cacheData[Math.abs(ratio)];\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * 滚轮滚动时候发声的函数,是一个单例模式\r\n */\nvar tick = __webpack_require__(14);\n\nfunction AudioImpl() {\n    if (Audio) {\n        this.audio = new Audio(tick);\n        this.audio.volume = 0.2;\n    }\n}\n\nAudioImpl.prototype.play = function () {\n    try {\n        if (this.audio) {\n            this.audio.currentTime = 0;\n            this.audio.play();\n        }\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nvar audioImpl;\n\nmodule.exports = function () {\n    if (audioImpl) {\n        return audioImpl;\n    } else {\n        audioImpl = new AudioImpl();\n        return audioImpl;\n    }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Picker_1 = __webpack_require__(7);\nmodule.exports = function (option) {\n    return new Picker_1.Picker(option);\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Col_1 = __webpack_require__(8);\nvar defaultOption_1 = __webpack_require__(9);\nvar wheel3D_1 = __webpack_require__(10);\nvar wheel_1 = __webpack_require__(15);\nvar browserUtil_1 = __webpack_require__(2);\nvar Frame = __webpack_require__(16);\n__webpack_require__(17);\n\nvar Picker = function () {\n    function Picker(options) {\n        _classCallCheck(this, Picker);\n\n        //滚轮列表\n        this._wheels = [];\n        //主框架\n        this._cols = [];\n        //用用户配置,覆盖默认配置,生成当前控件的实例的配置\n        this._option = Object.assign({}, defaultOption_1.default, options);\n        //主架\n        this._frame = new Frame(this, this._option);\n        //解析cols属性,将其转换为Cols的数组\n        var cols = [],\n            i = 0;\n        if (Array.isArray(this._option.cols)) {\n            //如果cols为空数组,或者里面的元素是字符串,表示仅一个滚轮,就是cols本身\n            if (this._option.cols.length === 0 || typeof this._option.cols[0] === 'string') {\n                cols.push(new Col_1.Col(this._option.cols));\n            } else {\n                //否则表示数组中的每个元素都是个滚轮\n                for (i = 0; i < this._option.cols.length; i++) {\n                    cols.push(new Col_1.Col(this._option.cols[i]));\n                }\n            }\n        } else {\n            //如果不是数组,表示有cols是一个json形式配置的滚轮\n            cols.push(new Col_1.Col(this._option.cols));\n        }\n        this._cols = cols;\n        //构造滚轮\n        this._wheels = [];\n        var wheel, col;\n        for (var _i = 0; _i < cols.length; _i++) {\n            var _col = cols[_i];\n            //设置滚轮\n            wheel = !browserUtil_1.default.isIE && this._option.isPerspective ? new wheel3D_1.Wheel3D(this, _col, this._option, _i) : new wheel_1.Wheel(this, _col, this._option, _i);\n            this._wheels.push(wheel);\n            this._frame.body().append(wheel.getDOM());\n            //重写wheel的onSelectItem事件\n            var that = this;\n            wheel.addSelectItemListener(function (i) {\n                return function (index, value) {\n                    //如果用户注册了onSelectItem\n                    if (typeof that._option.onSelectItem == 'function') {\n                        that._option.onSelectItem.call(that, i, index, value);\n                    }\n                };\n            }(_i));\n        }\n        for (var _i2 = 0; _i2 < cols.length; _i2++) {\n            //设置滚轮的选项\n            that.setValue(_i2, that._option.setValues[_i2]);\n        }\n        //是否可见\n        this._visible = false;\n    }\n    //是否可见\n\n\n    _createClass(Picker, [{\n        key: \"show\",\n\n        /**\r\n         * 显示\r\n         */\n        value: function show() {\n            this._frame.showCover();\n            this._frame.showFrame();\n            this._visible = true;\n        }\n        /**\r\n         * 隐藏\r\n         */\n\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this._frame.hideCover();\n            this._frame.hideFrame();\n            this._visible = false;\n        }\n        /**\r\n         * 关闭\r\n         */\n\n    }, {\n        key: \"close\",\n        value: function close() {\n            this._frame.close();\n            this._frame.hideCover();\n            this._option = null;\n            this._wheels.forEach(function (wheel) {\n                return wheel.destroy();\n            });\n            this._wheels = null;\n            this._frame = null;\n            this._cols = null;\n        }\n        /**\r\n         * 设置滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {any[]} list      滚轮的可选值列表\r\n         * @param {*} defaultValue  默认值,如果为空会以当前值作为默认值。如果没有当前值会以第一个值作为默认值\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(index, list, defaultValue) {\n            if (this._wheels[index]) this._wheels[index].setOptions(list, defaultValue);\n        }\n        /**\r\n         * 获取滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions(index) {\n            if (this._wheels[index]) {\n                return this._wheels[index].getOptions();\n            } else {\n                return null;\n            }\n        }\n        /**\r\n         * 设置滚轮的可选值\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {*} value         设置的值\r\n         */\n\n    }, {\n        key: \"setValue\",\n        value: function setValue(index, value) {\n            if (this._wheels[index]) this._wheels[index].selectOption(value);\n        }\n        /**\r\n         * 获取滚轮的值,如果index为空表示获取所有滚轮的值\r\n         * @param {number} index    滚轮的index,从0开始记录。如果为空表示获取所有滚轮的值\r\n         */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (index != null) {\n                if (this._wheels[index]) return this._wheels[index].getValue();\n            } else {\n                var values = [];\n                var i;\n                for (i = 0; i < this._cols.length; i++) {\n                    values.push(this._wheels[i].getValue());\n                }\n                return values;\n            }\n        }\n    }, {\n        key: \"visible\",\n        get: function get() {\n            return this._visible;\n        }\n    }]);\n\n    return Picker;\n}();\n\nexports.Picker = Picker;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 将用户数据封装为列对象\r\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Col = function () {\n    function Col(colOption) {\n        _classCallCheck(this, Col);\n\n        this.prefix = \"\";\n        this.suffix = \"\";\n        this.labelKey = \"label\";\n        this.valueKey = \"value\";\n        //列的类型，0：未知 1：字符串数组 2：对象数组\n        this.type = 0;\n        //如果option是一个数组,视为仅存在options的情况\n        if (Array.isArray(colOption)) {\n            this.options = colOption;\n            this.type = 1;\n        } else {\n            this.options = colOption.options || [];\n            if (this.options.length > 0) {\n                if (typeof this.options[0] === 'string') {\n                    this.type = 1;\n                } else {\n                    this.type = 2;\n                }\n            } else {\n                this.type = 0;\n            }\n            this.prefix = colOption.prefix || \"\";\n            this.suffix = colOption.suffix || \"\";\n            this.labelKey = colOption['labelKey'] || this.labelKey;\n            this.valueKey = colOption['valueKey'] || this.valueKey;\n        }\n    }\n\n    _createClass(Col, [{\n        key: \"push\",\n        value: function push(item) {\n            this.options.push(item);\n        }\n    }, {\n        key: \"set\",\n        value: function set(index, item) {\n            if (this.type == 0) {\n                this.type = typeof item === 'string' ? 1 : 2;\n            }\n            this.options[index] = item;\n        }\n    }, {\n        key: \"setCol\",\n        value: function setCol() {}\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.valueKey];\n            }\n        }\n    }, {\n        key: \"getLabel\",\n        value: function getLabel(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.labelKey];\n            }\n        }\n    }]);\n\n    return Col;\n}();\n\nexports.Col = Col;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * 用户默认配置\r\n */\nvar defaultOptions = {\n    cols: [[]],\n    setValues: [],\n    onSelectItem: null,\n    onOkClick: null,\n    onCancelClick: null,\n    fontSize: 15,\n    isPerspective: true,\n    hasVoice: true,\n    title: '',\n    buttons: [\"确定\", \"取消\"],\n    zIndex: 100\n};\nexports.default = defaultOptions;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar animationUtil_1 = __webpack_require__(3);\nvar constant_1 = __webpack_require__(1);\nvar perspectiveConversion = __webpack_require__(4);\nvar tick = __webpack_require__(5)();\n\nvar Wheel3D = function () {\n    function Wheel3D(picker, col, option, index) {\n        _classCallCheck(this, Wheel3D);\n\n        ///////////////////滚轮显示属性\n        //最大转角\n        this.maxAngle = 0;\n        //最小转角,设置可选项列表后需重新计算\n        this.minAngle = 0;\n        //滚轮的实际半径,因为有透视效果,所以滚轮实际半径比容器的高度的一半还小。根据勾股定理,计算得实际半径是容器高度的根号5分之1\n        this.radius = constant_1.default.WHEEL_HEIGHT / Math.sqrt(5);\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        this.visibleAngle = 0;\n        //获取0.01em的实际像素值\n        this.em = function () {\n            return Math.min(window.innerWidth, window.innerHeight) / 100;\n        };\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的转角,用于计算滚轮是否转动过\n        this.originalAngle = 0;\n        //一次拖动过程中滚轮被转动的最大角度\n        this.lastIndexAngle = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        this.changeMaxAngle = 0;\n        //当前滚轮转角\n        this.angle = 0;\n        //当前被选值的index\n        this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        this.isDraging = false;\n        //正在播放的刻度音\n        this.audio = null;\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n        ///////////////////主要属性\n        //picker对象\n        this.picker = picker;\n        //option对象\n        this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        this.index = index;\n        //转轮主体\n        this.dom = domUtil_1.default('<div class=\"picker-wheel3d\">' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '<ul></ul>' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '</div>').css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        this.contains = this.dom.find('ul');\n        ///////////////////滚轮显示属性\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        this.visibleAngle = 90 - Math.acos(this.radius / constant_1.default.WHEEL_HEIGHT * 2) / Math.PI * 180;\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchstart\", startDrag);\n        this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchmove\", drag);\n        this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        this.dom[0].addEventListener(\"touchend\", endDrag);\n        this.dom[0].addEventListener(\"mouseup\", endDrag);\n        this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //初始化标签\n        this.dom.find(\".picker-label\").css(\"transform\", \"translateZ(\" + this.radius / 100 + \"em) scale(0.75)\");\n        //设置标签\n        this.setSuffix(col.suffix);\n        this.setPrefix(col.prefix);\n        this.setOptions(col.options, null, true);\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel3D, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalAngle = this.angle;\n            this.changeMaxAngle = 0;\n            this.lastIndexAngle = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算转角变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeAngle = (perspectiveConversion(this.lastY, this.radius, constant_1.default.WHEEL_HEIGHT) - perspectiveConversion(y, this.radius, constant_1.default.WHEEL_HEIGHT)) / Math.PI * 180;\n            var angle = changeAngle + this.angle;\n            //记录滚轮滚动的最大转角\n            this.changeMaxAngle = Math.max(Math.abs(this.originalAngle - angle), this.changeMaxAngle);\n            //记录当前角度\n            this.setAngle(angle);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeAngle) {\n                this.speed = changeAngle / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的angle。之所以乘4是根据偏移效果经验得到的\n            var changeAngle = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var angle = changeAngle + this.angle;\n            //根据角度计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByAngle(angle);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小转角\n            this.maxAngle = constant_1.default.WHEEL_ITEM_ANGLE * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label,\n\n            //显示标签的dom的高度,要求根据wheelItemAngle计算,使各个标签dom的边缘刚好挨在一起,确保没有空细\n            height = this.radius * Math.PI * constant_1.default.WHEEL_ITEM_ANGLE / 180;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(角度)\n                var li = domUtil_1.default(\"<li></li>\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var angle = constant_1.default.WHEEL_ITEM_ANGLE * -index;\n                //为了解决3d放大后，文字模糊的问题，故采用zoom=2的方案，所以li的尺寸方面，统一缩小一半\n                li.css(\"transform\", \"rotateX(\" + angle + \"deg) translateZ(\" + that.radius / 100 + \"em) scale(0.75)\").css(\"padding\", height / 5.9 / 100 + \"em 0\").css(\"height\", height / 100 + \"em\").css(\"line-height\", height / 100 + \"em\");\n                //将标签的角度保存到其dom中\n                li.data(\"angle\", angle);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxAngle < 1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            //刷新标签\n            this.flushLabel();\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 获得用户可选的标签\r\n        */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var angle = this.calcAngleBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _angle = animationUtil_1.default.easeOut(start, that.angle, angle - that.angle, during);\n                    if (Math.abs(_angle - angle) < 1) {\n                        _angle = angle;\n                    }\n                    that.setAngle(_angle);\n                    if (_angle != angle) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setAngle(angle);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定角度,自动设定标签的各个位置\r\n        * @param {number} angle\t\t要转到的角度\r\n        * @returns {number}\t\t\t修正后的角度,即最终的实际角度\r\n        */\n\n    }, {\n        key: \"setAngle\",\n        value: function setAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = this.rangeAngle(angle);\n            // 如果角度变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexAngle = this.lastIndexAngle;\n                var index = this.calcSelectedIndexByAngle(angle);\n                if (lastIndexAngle != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexAngle = index;\n            }\n            this.contains.css(\"transform\", \"rotateX(\" + angle + \"deg)\");\n            this.angle = angle;\n            this.flushLabel();\n            return angle;\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByAngle\",\n        value: function calcSelectedIndexByAngle(angle) {\n            angle = this.rangeAngle(angle);\n            return Math.round(Math.abs(angle / constant_1.default.WHEEL_ITEM_ANGLE));\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcAngleBySelectedIndex\",\n        value: function calcAngleBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_ANGLE;\n        }\n        /**\r\n        * 限制转角超过极限值\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeAngle\",\n        value: function rangeAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = Math.max(this.minAngle, angle);\n            angle = Math.min(this.maxAngle, angle);\n            return angle;\n        }\n        /**\r\n        * 刷新各个标签的状态,确定应该显示哪些标签\r\n        */\n\n    }, {\n        key: \"flushLabel\",\n        value: function flushLabel() {\n            var that = this;\n            this.dom.find(\"li\").each(function (index, li) {\n                li = domUtil_1.default(li);\n                var angle = li.data(\"angle\") + that.angle;\n                if (angle > that.visibleAngle || angle < -that.visibleAngle) {\n                    if (li.css(\"display\") != \"none\") {\n                        li.css(\"display\", \"none\");\n                    }\n                } else {\n                    if (li.css(\"display\") != \"block\") {\n                        li.css(\"display\", \"block\");\n                    }\n                }\n            });\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n    }]);\n\n    return Wheel3D;\n}();\n\nexports.Wheel3D = Wheel3D;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n(function (global, factory) {\r\n\t\"use strict\"\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\tmodule.exports = factory;\r\n\t} else {\r\n\t\tglobal.$ = factory(global.document);\r\n\t}\r\n})(typeof window !== \"undefined\" ? window : this, function (document) {\r\n\r\n\t//用于插入使用的DocumentFragment\r\n\tvar fragment = document.createDocumentFragment();\r\n\r\n\t//将html解析为my-jquery对象\r\n\tfunction buildHTML(selector) {\r\n\t\tselector = selector.trim();\r\n\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\tif(selector.startsWith(\"<\")){\r\n\t\t\t//用于使用innerHTML生成dom的div\r\n\t\t\tvar div = document.createElement(\"DIV\");\r\n\t\t\tdiv.innerHTML = selector;\r\n\t\t\treturn $(div.children);\r\n\t\t} else {\r\n\t\t\treturn $([]);\r\n\t\t}\r\n\t}\r\n\r\n\t//将html解析为fragment对象\r\n\tfunction buildFragment(dom) {\r\n\t\tvar dom = $(dom);\r\n\t\tfragment.textContent = \"\";\r\n\t\tdom.each(function (i, item) {\r\n\t\t\tfragment.appendChild(item);\r\n\t\t})\r\n\t\treturn fragment;\r\n\t}\r\n\r\n\t//将各种要插入对象做成一个buildFragment,根据fn插入\r\n\tfunction insertDom(targets, dom, fn) {\r\n\t\t//如果插入到的元素是多个,克隆之后再插入\r\n\t\ttargets.each(function (i, item) {\r\n\t\t\tif(i != targets.length-1){\r\n\t\t\t\tfn(this, buildFragment(dom.clone()));\r\n\t\t\t} else {\r\n\t\t\t\tfn(this, buildFragment(dom));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//一个模板,用于生成setter和getter重载函数\r\n\tfunction access(myjq, setter, getter, key, value) {\r\n\t\t//是否是setter方法,如果是setter方法,value不能是undefined\r\n\t\treturn value === undefined ? (myjq.length ? getter(myjq[0], key) : undefined) : myjq.each(function (index, item) {\r\n\t\t\treturn setter(item, key, value)\r\n\t\t})\r\n\t}\r\n\r\n    //短横线隔开式命名转驼峰命名\r\n    function toCamelCase(name) {\r\n        return name.replace(/-\\S/g, function (splitChar) {\r\n            return splitChar[1].toUpperCase();\r\n        });\r\n    }\r\n\r\n    //克隆dom\r\n\tfunction domClone(item, hasSystem) {\r\n\t\tvar dom = item.cloneNode(true);\r\n\t\thasSystem && item[dataKey] && (dom[dataKey] = item[dataKey]);\r\n\r\n\t\treturn dom;\r\n\t}\r\n\r\n\t//删除dom时候使用\r\n\tfunction clearData(item) {\r\n\t\tvar arr;\r\n\t\tif(item.nodeType == 1){\r\n\t\t\tdelete item[dataKey];\r\n\t\t\tarr = item.children;\r\n\t\t} else if(item && item.length != null){\r\n\t\t\tarr = item;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor(var i; i < arr.length; i++){\r\n\t\t\tclearData(arr[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t//防止冲突的id\r\n\tvar $$mjid = (\"\" + Date.now() +  Math.random()).replace('.', '');\r\n\t//dom缓存的key\r\n\tvar dataKey = \"$$mjid\" + $$mjid\r\n\r\n\tvar $ = function(selector){\r\n\t\treturn new $.fn.init(selector);\r\n\t}\r\n\r\n\t$.fn = $.prototype = {\r\n\t\t//唯一id\r\n\t\t$$mjid : $$mjid,\r\n\r\n\t\t//jquery对象原型\r\n\t\tinit : function(selector){\r\n\r\n\t\t\t//如果没有选择器，直接返回\r\n\t\t\tif(!selector){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof selector == \"string\"){\r\n\t\t\t\t//如果是字符串，表示可能是选择器，或者是构建字符串\r\n\t\t\t\tselector = selector.trim();\r\n\t\t\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\t\t\tif(selector.startsWith(\"<\")){\r\n\t\t\t\t\treturn $(buildHTML(selector));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//如果不是，说明是选择器，直接选择\r\n\t\t\t\t\tvar doms = document.querySelectorAll(selector);\r\n\r\n\t\t\t\t\t//递归调用$，从新封装一次\r\n\t\t\t\t\treturn $(doms);\r\n\t\t\t\t}\r\n\t\t\t} else if(typeof selector == \"object\" && !isNaN(selector[\"length\"])){\r\n\t\t\t\t//类似数组就表示是数组。遍历数组或者是$.init对象，如果里面是dom元素封装返回\r\n\t\t\t\tfor(var i = 0,length = 0; i < selector.length; i++){\r\n\t\t\t\t\tvar dom = selector[i];\r\n\t\t\t\t\tif(dom && dom.nodeType == 1){\r\n\t\t\t\t\t\tthis[length] = dom;\r\n\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.length = length;\r\n\t\t\t\treturn this;\r\n\t\t\t} else if(selector.nodeType){\r\n\t\t\t\t//如果本身就是一个dom元素，直接封装返回\r\n\t\t\t\tthis.length = 1;\r\n\t\t\t\tthis[0] = selector;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//使init变为类数组对象\r\n\t\tlength : 0,\r\n\r\n\t\t//模仿each\r\n\t\teach : function (fn) {\r\n\t\t\tfor(var i =0; i < this.length; i++){\r\n\t\t\t\tif(typeof fn == 'function' && fn.call(this[i], i, this[i]) === false){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\teq: function(i){\r\n\t\t\treturn $(this[i]);\r\n\t\t},\r\n\r\n\t\t//往集合增加一个dom\r\n\t\tadd: function (item) {\r\n\t\t\tif(item && item.nodeType == 1){\r\n\t\t\t\tthis[this.length++] = item;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t//在某个节点下面找div\r\n\t\tfind: function(selector){\r\n\t\t\treturn access(this,null,function (dom, selector) {\r\n\t\t\t\treturn $(dom.querySelectorAll(selector));\r\n\t\t\t},selector)\r\n\t\t},\r\n\r\n\t\t//用于将文档增添于\r\n\t\tappend : function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tappendTo: function(parent){\r\n\t\t\t$(parent).append(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprepend: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.childNodes.length ?  parent.insertBefore(child, parent.childNodes[0]) : parent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprependTo: function(parent){\r\n\t\t\t$(parent).prepend(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tafter: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tif(parent.parentNode.lastChild == parent){\r\n\t\t\t\t\tparent.parentNode.appendChild(child);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.parentNode.insertBefore(child, parent.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertAfter: function(parent){\r\n\t\t\t$(parent).after(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tbefore: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.parentNode.insertBefore(child, parent);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertBefore: function(parent){\r\n\t\t\t$(parent).before(this);\r\n\t\t\treturn $(this[0]);\r\n\t\t},\r\n\t\t\r\n\t\tclone: function () {\r\n\t\t\tvar arr = [];\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\tarr.push(domClone(item, true));\r\n\t\t\t})\r\n\t\t\treturn $(arr);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 删除dom\r\n\t\t */\r\n\t\tremove: function () {\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\titem.parentElement && item.parentElement.removeChild(item)\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdata: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tif(!item[dataKey]){\r\n\t\t\t\t\titem[dataKey] = {};\r\n\t\t\t\t}\r\n\t\t\t\titem[dataKey][key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[dataKey] && item[dataKey][key];\r\n\t\t\t}, key, value);\r\n\t\t},\r\n\r\n\t\tattr: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.setAttribute(key, value)\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.getAttribute(key);\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\tremoveAttr: function (key) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(key) {\r\n\t\t\t\t\titem.removeAttr(key);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\taddClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.add(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tremoveClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.remove(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\thasClass: function (className) {\r\n\t\t\treturn this.length ? this[0].classList.contains(className) : false;\r\n\t\t},\r\n\r\n\t\ttoggleClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\tif(item.classList.contains(className)){\r\n\t\t\t\t\t\titem.classList.remove(className);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.classList.add(className);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tprop: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem[key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[key];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\r\n\t\thtml: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tclearData(item.children || {length : 0});\r\n\t\t\t\titem.innerHTML = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.innerHTML;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\ttext: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.textContent = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.textContent;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\tval: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.value = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.value;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\thide: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(item.style.display){\r\n\t\t\t\t\t$(item).data(\"my-jquery-style-display\",item.style.display);\r\n\t\t\t\t}\r\n\t\t\t\titem.style.display=\"none\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tshow: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\titem.style.display= $(item).data(\"my-jquery-style-display\") || \"\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tcss: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.style[toCamelCase(key)] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.style[toCamelCase(key)];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\ton: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                if(typeof fn != 'function'){\r\n                \treturn;\r\n                }\r\n\r\n            \t//注册的函数\r\n            \tvar cacheFn = function (event) {\r\n\t\t\t\t\tif(fn.call(this, event) === false){\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t}\r\n                }\r\n                cacheFn.fn = fn;\r\n\r\n                //缓存该函数\r\n                var cacheEvent = $(item).data(\"my-jquery-event-cache\") || {};\r\n                cacheEvent[eventName] = cacheEvent[eventName] || [];\r\n                cacheEvent[eventName].push(cacheFn)\r\n\r\n                this.addEventListener(eventName, cacheFn, false);\r\n                $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n            })\r\n\t\t},\r\n\t\toff: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                var cacheEvent = $(this).data(\"my-jquery-event-cache\");\r\n\r\n                if(!cacheEvent)\r\n                \treturn;\r\n\r\n                var self = this;\r\n                if(cacheEvent[eventName] instanceof Array){\r\n                \tvar tempArr = [];\r\n                    cacheEvent[eventName].forEach(function (cacheFn) {\r\n                        if(typeof fn == 'function'){\r\n                        \tif( fn == cacheFn.fn){\r\n                                self.removeEventListener(eventName, cacheFn, false);\r\n                            } else {\r\n                                tempArr.push(cacheFn)\r\n                            }\r\n                        } else {\r\n                            self.removeEventListener(eventName, cacheFn, false);\r\n\t\t\t\t\t\t}\r\n                    })\r\n\r\n                    cacheEvent[eventName] = tempArr;\r\n                    $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n                }\r\n            })\r\n\r\n\t\t},\r\n\t\ttoggle: function(eventName){\r\n            return this.each(function (i, item) {\r\n            \tif(typeof this[eventName] == 'function'){\r\n                    this[eventName]();\r\n\t\t\t\t}\r\n            })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t$.fn.init.prototype = $.fn;\r\n\r\n\treturn $;\r\n})\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Created by njz on 16/11/29.\r\n */\n\n// 对动画的封装,支持requestAnimationFrame使用requestAnimationFrame封装。\n// 若览器不支持requestAnimationFrame情况下的回退，回退到使用setTmeout的情况。\nvar requestAnimationFrame, cancelAnimationFrame;\nvar lastTime = 0;\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\nrequestAnimationFrame = requestAnimationFrame || window.requestAnimationFrame || function (callback, element) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n    }, timeToCall);\n    lastTime = currTime + timeToCall;\n    return id;\n};\ncancelAnimationFrame = cancelAnimationFrame || window.cancelAnimationFrame || window.cancelRequestAnimationFrame || function (id) {\n    clearTimeout(id);\n};\n\nmodule.exports = {\n    /**\r\n     * 动画开始函数\r\n     * @param fn\r\n     * @returns {number}        动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return requestAnimationFrame(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        cancelAnimationFrame(animationId);\n    },\n    easeIn: function easeIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n    },\n    /**\r\n     * 淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n        return -c / 2 * (--t * (t - 2) - 1) + b;\n    }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = { \"0\": 0, \"1\": 0.006180474730027776, \"2\": 0.012361758667979887, \"3\": 0.01854466178595427, \"4\": 0.024729995586343003, \"5\": 0.030918573871856408, \"6\": 0.03711121352142655, \"7\": 0.043308735273995536, \"8\": 0.04951196452223301, \"9\": 0.05572173211827738, \"10\": 0.06193887519365582, \"11\": 0.06816423799561012, \"12\": 0.07439867274213974, \"13\": 0.08064304049816978, \"14\": 0.08689821207536214, \"15\": 0.0931650689582126, \"16\": 0.09944450425921704, \"17\": 0.1057374237060475, \"18\": 0.11204474666385271, \"19\": 0.11836740719599605, \"20\": 0.12470635516675682, \"21\": 0.13106255738976524, \"22\": 0.13743699882620672, \"23\": 0.1438306838371266, \"24\": 0.1502446374944947, \"25\": 0.15667990695605222, \"26\": 0.163137562909363, \"27\": 0.16961870109094018, \"28\": 0.1761244438868085, \"29\": 0.18265594202141244, \"30\": 0.189214376342388, \"31\": 0.1958009597093892, \"32\": 0.20241693899591295, \"33\": 0.20906359721390222, \"34\": 0.21574225577183714, \"35\": 0.2224542768780669, \"36\": 0.22920106610229693, \"37\": 0.23598407510944647, \"38\": 0.24280480458155373, \"39\": 0.24966480734504126, \"40\": 0.2565656917224997, \"41\": 0.26350912513022323, \"42\": 0.2704968379450743, \"43\": 0.27753062766690556, \"44\": 0.28461236340577195, \"45\": 0.2917439907265723, \"46\": 0.298927536887646, \"47\": 0.30616511651426775, \"48\": 0.3134589377530486, \"49\": 0.3208113089590395, \"50\": 0.32822464597399087, \"51\": 0.3357014800618854, \"52\": 0.3432444665767064, \"53\": 0.3508563944476478, \"54\": 0.35854019657886727, \"55\": 0.3662989612747276, \"56\": 0.37413594481766604, \"57\": 0.38205458534478537, \"58\": 0.39005851819157766, \"59\": 0.3981515928975172, \"60\": 0.4063378920994586, \"61\": 0.41462175257587425, \"62\": 0.42300778874928274, \"63\": 0.4315009190073606, \"64\": 0.4401063952672662, \"65\": 0.4488298362852176, \"66\": 0.45767726530766856, \"67\": 0.4666551527757603, \"68\": 0.47577046493656705, \"69\": 0.4850307193901132, \"70\": 0.4944440488195467, \"71\": 0.5040192744255141, \"72\": 0.5137659909310855, \"73\": 0.523694665462527, \"74\": 0.5338167531736872, \"75\": 0.5441448332086339, \"76\": 0.5546927695451231, \"77\": 0.5654759025098686, \"78\": 0.5765112784180985, \"79\": 0.5878179270265199, \"80\": 0.5994171995371129, \"81\": 0.6113331840998124, \"82\": 0.6235932216642447, \"83\": 0.6362285534378791, \"84\": 0.6492751433974548, \"85\": 0.6627747373240171, \"86\": 0.6767762470698537, \"87\": 0.6913375909489355, \"88\": 0.7065281883018284, \"89\": 0.7224324166263504, \"90\": 0.7391545276252866, \"91\": 0.7568258524516188, \"92\": 0.7756157498195769, \"93\": 0.7957489855645078, \"94\": 0.8175348626997212, \"95\": 0.8414195586288256, \"96\": 0.8680892494981647, \"97\": 0.8987014263951989, \"98\": 0.935517870959519, \"99\": 0.9843911534692572, \"100\": 1.1071487177940906 };\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"data:audio/x-wav;base64,\"\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar animationUtil_1 = __webpack_require__(3);\nvar browserUtil_1 = __webpack_require__(2);\nvar constant_1 = __webpack_require__(1);\nvar perspectiveConversion = __webpack_require__(4);\nvar tick = __webpack_require__(5)();\n\nvar Wheel = function () {\n    function Wheel(picker, col, option, index) {\n        _classCallCheck(this, Wheel);\n\n        ///////////////////滚轮显示属性\n        //最大位移\n        this.maxDistance = 0;\n        //最小位移,设置可选项列表后需重新计算\n        this.minDistance = 0;\n        //获取0.01em的实际像素值\n        this.em = function () {\n            return Math.min(window.innerWidth, window.innerHeight) / 100;\n        };\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的位移,用于计算滚轮是否转动过\n        this.originalDistance = 0;\n        //一次拖动过程中滚轮被转动的最大位移\n        this.lastIndexDistance = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        this.changeMaxDistance = 0;\n        //当前滚轮位移\n        this.distance = 0;\n        //当前被选值的index\n        this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        this.isDraging = false;\n        //正在播放的刻度音\n        this.audio = null;\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n        ///////////////////主要属性\n        //picker对象\n        this.picker = picker;\n        //option对象\n        this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        this.index = index;\n        //转轮主体\n        this.dom = domUtil_1.default(\"<div class=\\\"picker-wheel\\\">\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n                <ul></ul>\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n            </div>\").css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        this.contains = this.dom.find('ul');\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchstart\", startDrag);\n        this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchmove\", drag);\n        this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        this.dom[0].addEventListener(\"touchend\", endDrag);\n        this.dom[0].addEventListener(\"mouseup\", endDrag);\n        this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //设置标签\n        this.setSuffix(col.suffix);\n        this.setPrefix(col.prefix);\n        this.setOptions(col.options, null, true);\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalDistance = this.distance;\n            this.changeMaxDistance = 0;\n            this.lastIndexDistance = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算位移变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeDistance = this.lastY - y;\n            var distance = changeDistance + this.distance;\n            //记录滚轮滚动的最大位移\n            this.changeMaxDistance = Math.max(Math.abs(this.originalDistance - distance), this.changeMaxDistance);\n            //记录当前位移\n            this.setDistance(distance);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeDistance) {\n                this.speed = changeDistance / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的Distance。之所以乘4是根据偏移效果经验得到的\n            var changeDistance = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var distance = changeDistance + this.distance;\n            //根据位移计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByDistance(distance);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小位移\n            this.maxDistance = constant_1.default.WHEEL_ITEM_HIGHT * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(位移)\n                var li = domUtil_1.default(\"<li></li>\").css('top', constant_1.default.WHEEL_ITEM_HIGHT / 100 * i + \"em\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var distance = constant_1.default.WHEEL_ITEM_HIGHT * -index;\n                //将标签的位移保存到其dom中\n                li.data(\"distance\", distance);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxDistance < 0.1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 获得用户可选的标签\r\n        */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var distance = this.calcDistanceBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _Distance = animationUtil_1.default.easeOut(start, that.distance, distance - that.distance, during);\n                    if (Math.abs(_Distance - distance) < 1) {\n                        _Distance = distance;\n                    }\n                    that.setDistance(_Distance);\n                    if (_Distance != distance) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setDistance(distance);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定位移,自动设定标签的各个位置\r\n        * @param {number} distance\t\t要转到的位移\r\n        * @returns {number}\t\t\t修正后的位移,即最终的实际位移\r\n        */\n\n    }, {\n        key: \"setDistance\",\n        value: function setDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = this.rangeDistance(distance);\n            // 如果位移变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexDistance = this.lastIndexDistance;\n                var index = this.calcSelectedIndexByDistance(distance);\n                if (lastIndexDistance != index && !browserUtil_1.default.isIE) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexDistance = index;\n            }\n            this.contains.css(\"transform\", \"translateY(\" + (constant_1.default.WHEEL_HEIGHT / 2 - constant_1.default.WHEEL_ITEM_HIGHT / 2 - distance) / 100 + \"em)\");\n            this.distance = distance;\n            return distance;\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByDistance\",\n        value: function calcSelectedIndexByDistance(distance) {\n            distance = this.rangeDistance(distance);\n            return Math.round(Math.abs(distance / constant_1.default.WHEEL_ITEM_HIGHT));\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param Distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcDistanceBySelectedIndex\",\n        value: function calcDistanceBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_HIGHT;\n        }\n        /**\r\n        * 限制位移超过极限值\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeDistance\",\n        value: function rangeDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = Math.max(this.minDistance, distance);\n            distance = Math.min(this.maxDistance, distance);\n            return distance;\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n    }]);\n\n    return Wheel;\n}();\n\nexports.Wheel = Wheel;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nvar _constant = __webpack_require__(1);\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nvar _browserUtil = __webpack_require__(2);\n\nvar _browserUtil2 = _interopRequireDefault(_browserUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//构建主框架\nfunction Frame(picker, option) {\n\n\t//picker对象\n\tthis.picker = picker;\n\t//option\n\tthis.option = option;\n\n\t//构建cover\n\tthis.cover = (0, _domUtil2.default)(\"<div class='my-picker-cover' style='z-index: \" + option.zIndex + \"'>\").hide();\n\n\tthis.frame = (0, _domUtil2.default)('<div class=\"picker picker-frame\" style=\"z-index: ' + (option.zIndex + 1) + '\">' + '<header class=\"picker-head\">' + '<a class=\"picker-btn-cancel\"><span class=\"picker-header-text\"></span></a>' + '<h4 class=\"picker-title\"><span class=\"picker-header-text\"></span></h4>' + '<span class=\"picker-selected\">已选0</span>' + '<a class=\"picker-btn-ok\"><span class=\"picker-header-text\"></span></a>' + '</header>' + '<div class=\"picker-body\"></div>' + '</div>').css('height', (_constant2.default.WHEEL_HEIGHT + 15) / 100 + \"em\").hide();\n\tthis.frame.find(\".picker-body\")[0].addEventListener('touchstart', function (event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t});\n\n\t//如果是3d透视模式，增加3d透视的样式\n\tif (!_browserUtil2.default.isIE && this._option.isPerspective) {\n\t\tthis.frame.addClass('s-3d').find(\".picker-body\").css(\"perspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"webkitPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"mozPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"msPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\");\n\t}\n\n\t//设置标题按钮名\n\tthis.frame.find(\".picker-title .picker-header-text\").text(option.title);\n\tthis.frame.find(\".picker-btn-cancel .picker-header-text\").text(option.buttons[1] || '取消');\n\tthis.frame.find(\".picker-btn-ok .picker-header-text\").text(option.buttons[0] || '确定');\n\n\t(0, _domUtil2.default)(\"body\").append(this.frame).append(this.cover);\n\n\t//绑定主架的事件\n\tvar that = this;\n\tthis.frame.find(\".picker-btn-cancel\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onCancelClick == 'function') {\n\t\t\tthat.option.onCancelClick.call(that.picker);\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\tthis.frame.find(\".picker-btn-ok\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onOkClick == 'function') {\n\t\t\tvar result = that.option.onOkClick.call(that.picker, picker.getValue());\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\n\tthis._resizeHandle = function () {\n\t\tthis.frame.css('fontSize', Math.min(document.documentElement.clientWidth, document.documentElement.clientHeight) + 'px');\n\t}.bind(this);\n\n\twindow.addEventListener('resize', this._resizeHandle);\n\tthis._resizeHandle();\n}\n\nFrame.prototype = {\n\t//显示cover\n\tshowCover: function showCover() {\n\t\tthis.cover.show();\n\t\tthis.cover.addClass('s-open');\n\t},\n\t//隐藏cover\n\thideCover: function hideCover() {\n\t\tthis.cover.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.cover.hide();\n\t\t}, 500);\n\t},\n\t//显示frame\n\tshowFrame: function showFrame() {\n\t\tthis.frame.show();\n\t\tthis.frame.addClass('s-open');\n\t},\n\t//显示frame\n\thideFrame: function hideFrame() {\n\t\tthis.frame.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.frame.hide();\n\t\t}, 500);\n\t},\n\tdom: function dom() {\n\t\treturn this.frame;\n\t},\n\tbody: function body() {\n\t\treturn this.frame.find('.picker-body');\n\t},\n\t//关闭\n\tclose: function close() {\n\t\tthis.remove();\n\t\twindow.removeEventListener('resize', this._resizeHandle);\n\t},\n\t//移除\n\tremove: function remove() {\n\t\tthis.frame.remove();\n\t}\n};\n\nmodule.exports = Frame;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=my-picker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/my-picker.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}