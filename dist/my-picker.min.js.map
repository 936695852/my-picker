{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///my-picker.min.js","webpack:///webpack/bootstrap a0d5d4536898ff734511","webpack:///./dist/my-picker.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","myJquery","default","document","WHEEL_HEIGHT","WHEEL_ITEM_ANGLE","WHEEL_ITEM_HIGHT","WHEEL_TRANSITION_TIME","animationUtil","startAnimation","fn","stopAnimation","animationId","easeIn","t","b","easeOut","easeInOut","cacheData","y","radius","wheelHeight","ratio","Math","round","max","min","abs","AudioImpl","_this","audio","_domUtil2","src","tick","on","volume","window","aa","_domUtil","obj","play","currentTime","e","console","error","audioImpl","_isIE","userAgent","navigator","isIE","matches","tridentMap","4","5","6","7","match","isWebKit","indexOf","isFirefox","Picker_1","option","Picker","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Col_1","defaultOption_1","Wheel3D_1","Wheel_1","browserUtil_1","util_1","Frame","options","_wheels","_cols","version","_option","assign","_frame","cols","Array","isArray","push","Col","wheel","_i","_col","isPerspective","Wheel3D","Wheel","body","append","getDOM","that","addSelectItemListener","index","onSelectItem","_i2","setValue","setValues","_visible","showCover","showFrame","hideCover","hideFrame","close","forEach","destroy","list","defaultValue","setOptions","getOptions","selectOption","values","getValue","colOption","prefix","suffix","labelKey","valueKey","type","item","defaultOptions","onOkClick","onCancelClick","fontSize","hasVoice","title","buttons","zIndex","_typeof","Symbol","iterator","constructor","domUtil_1","animationUtil_1","constant_1","perspectiveConversion","picker","col","startDrag","event","currentTarget","offsetTop","parentElement","offsetY","touches","clientY","drag","endDrag","maxAngle","minAngle","sqrt","visibleAngle","em","innerWidth","innerHeight","originalAngle","lastIndexAngle","changeMaxAngle","angle","selectedIndex","speed","timeStamp","lastY","isDraging","valueHashMap","onSelectItemCallbackList","dom","css","contains","find","acos","PI","itemValueKey","addEventListener","setSuffix","setPrefix","Date","now","parent","changeAngle","setAngle","calcSelectedIndexByAngle","selectIndex","selectedValue","isInti","arguments","undefined","html","label","height","li","text","data","clickHandle","stopPropagation","preventDefault","flushLabel","showAnimation","calcAngleBySelectedIndex","start","_run","_angle","oldSelectedIndex","toggleSelected","rangeAngle","visible","each","eq","filter","_fn","global","$","buildHTML","selector","trim","div","createElement","innerHTML","children","buildFragment","fragment","textContent","appendChild","insertDom","targets","clone","access","myjq","setter","toCamelCase","replace","splitChar","toUpperCase","domClone","hasSystem","cloneNode","dataKey","clearData","arr","nodeType","createDocumentFragment","$$mjid","random","init","doms","querySelectorAll","isNaN","add","child","appendTo","prepend","childNodes","insertBefore","prependTo","after","parentNode","lastChild","nextSibling","insertAfter","before","remove","removeChild","attr","setAttribute","getAttribute","removeAttr","addClass","className","classList","removeClass","hasClass","toggleClass","prop","val","hide","style","display","show","eventName","cacheFn","cacheEvent","off","tempArr","removeEventListener","toggle","requestAnimationFrame","cancelAnimationFrame","lastTime","vendors","x","callback","element","currTime","getTime","timeToCall","id","setTimeout","cancelRequestAnimationFrame","clearTimeout","0","1","2","3","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","maxDistance","minDistance","originalDistance","lastIndexDistance","changeMaxDistance","distance","setDistance","changeDistance","calcSelectedIndexByDistance","calcDistanceBySelectedIndex","_Distance","rangeDistance","_len","source","_key","to","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","_interopRequireDefault","cover","frame","_constant2","_browserUtil2","_resizeHandle","documentElement","clientWidth","clientHeight","bind","_constant","_browserUtil"],"mappings":"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","file":"my-picker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar myJquery = __webpack_require__(11);\nexports.default = myJquery(document);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    //滚轮的高度\n    WHEEL_HEIGHT: 85,\n    //在3D透视滚轮中，每个可选项在滚轮上的角度\n    WHEEL_ITEM_ANGLE: 15,\n    //在非3D透视滚轮中，一个滚轮的一个刻度的高度，单位是0.01em\n    // WHEEL_ITEM_HIGHT : 85 - (85 * 41.6 * 2 / 100) ,\n    WHEEL_ITEM_HIGHT: 85 - 85 * 41.6 * 2 / 100,\n    //滚轮因惯性而发生的减速滑动时间\n    WHEEL_TRANSITION_TIME: 400\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar animationUtil = __webpack_require__(12);\nexports.default = {\n    /**\r\n     * 动画开始函数\r\n     * @param {()=>void} fn             东航的回调\r\n     * @returns {number}                动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return animationUtil.startAnimation(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param {number} animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        animationUtil.stopAnimation(animationId);\n    },\n    /**\r\n     * 渐入效果插值\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeIn: function easeIn(t, b, c, d) {\n        return animationUtil.easeIn(t, b, c, d);\n    },\n    /**\r\n     * 淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return animationUtil.easeOut(t, b, c, d);\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        return animationUtil.easeInOut(t, b, c, d);\n    }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar cacheData = __webpack_require__(13);\n\n/**\r\n * 因为perspectiveConversion是个纯函数,因此可以缓存,这样有利于减少计算,增加动画流畅度。尤其在移动端效果十分明显。\r\n * 计算工作由test/calcIntersectionCache完成,这里只是将其计算结果封装为一个函数\r\n */\nmodule.exports = function (y, radius, wheelHeight) {\n\n    //计算比例\n    var ratio = Math.round(y * 200 / wheelHeight);\n    ratio = Math.max(-100, ratio);\n    ratio = Math.min(100, ratio);\n    return y < 0 ? -1 * cacheData[Math.abs(ratio)] : cacheData[Math.abs(ratio)];\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 滚轮滚动时候发声的函数,是一个单例模式\r\n */\nvar tick = __webpack_require__(14);\n\n\nfunction AudioImpl() {\n    var _this = this;\n\n    this.audio = (0, _domUtil2.default)('<audio></audio>')[0];\n    this.audio.src = tick;\n    (0, _domUtil2.default)(this.audio).on('loadedmetadata', function () {\n        _this.audio.volume = 0.2;\n    });\n    window.aa = this.audio;\n}\n\nAudioImpl.prototype.play = function () {\n    try {\n        if (this.audio) {\n            this.audio.play();\n            this.audio.currentTime = 0;\n        }\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nvar audioImpl;\n\nmodule.exports = function () {\n    if (audioImpl) {\n        return audioImpl;\n    } else {\n        audioImpl = new AudioImpl();\n        return audioImpl;\n    }\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _isIE = void 0;\nvar userAgent = navigator.userAgent;\nexports.default = {\n    /**\r\n     * 是否是IE\r\n     * @returns\r\n     */\n    isIE: function isIE() {\n        if (_isIE == null) {\n            _isIE = function () {\n                var matches = void 0;\n                var tridentMap = {\n                    '4': 8,\n                    '5': 9,\n                    '6': 10,\n                    '7': 11\n                };\n                matches = userAgent.match(/MSIE (\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!+matches[1];\n                }\n                matches = userAgent.match(/Trident\\/(\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!tridentMap[matches[1]] || false;\n                }\n                //we did what we could\n                return false;\n            }();\n        }\n        return _isIE;\n    },\n\n    /**\r\n     * 是否是webkit\r\n     * @returns\r\n     */\n    isWebKit: function isWebKit() {\n        return userAgent.indexOf('AppleWebKit') > -1;\n    },\n\n    /**\r\n     * 是否是火狐\r\n     * @returns\r\n     */\n    isFirefox: function isFirefox() {\n        return userAgent.indexOf('Gecko') > -1 && userAgent.indexOf('KHTML') == -1;\n    }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Picker_1 = __webpack_require__(7);\nmodule.exports = function (option) {\n    return new Picker_1.Picker(option);\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Col_1 = __webpack_require__(8);\nvar defaultOption_1 = __webpack_require__(9);\nvar Wheel3D_1 = __webpack_require__(10);\nvar Wheel_1 = __webpack_require__(15);\nvar browserUtil_1 = __webpack_require__(5);\nvar util_1 = __webpack_require__(16);\nvar Frame = __webpack_require__(17);\n__webpack_require__(18);\n\nvar Picker = function () {\n    function Picker(options) {\n        _classCallCheck(this, Picker);\n\n        //滚轮列表\n        this._wheels = [];\n        //主框架\n        this._cols = [];\n        this.version = '0.1.4';\n        //用用户配置,覆盖默认配置,生成当前控件的实例的配置\n        this._option = util_1.default.assign({}, defaultOption_1.default, options);\n        //主架\n        this._frame = new Frame(this, this._option);\n        //解析cols属性,将其转换为Cols的数组\n        var cols = [],\n            i = 0;\n        if (Array.isArray(this._option.cols)) {\n            //如果cols为空数组,或者里面的元素是字符串,表示仅一个滚轮,就是cols本身\n            if (this._option.cols.length === 0 || typeof this._option.cols[0] === 'string') {\n                cols.push(new Col_1.Col(this._option.cols));\n            } else {\n                //否则表示数组中的每个元素都是个滚轮\n                for (i = 0; i < this._option.cols.length; i++) {\n                    cols.push(new Col_1.Col(this._option.cols[i]));\n                }\n            }\n        } else {\n            //如果不是数组,表示有cols是一个json形式配置的滚轮\n            cols.push(new Col_1.Col(this._option.cols));\n        }\n        this._cols = cols;\n        //构造滚轮\n        this._wheels = [];\n        var wheel, col;\n        for (var _i = 0; _i < cols.length; _i++) {\n            var _col = cols[_i];\n            //设置滚轮\n            wheel = !browserUtil_1.default.isIE() && this._option.isPerspective ? new Wheel3D_1.Wheel3D(this, _col, this._option, _i) : new Wheel_1.Wheel(this, _col, this._option, _i);\n            this._wheels.push(wheel);\n            this._frame.body().append(wheel.getDOM());\n            //重写wheel的onSelectItem事件\n            var that = this;\n            wheel.addSelectItemListener(function (i) {\n                return function (index, value) {\n                    //如果用户注册了onSelectItem\n                    if (typeof that._option.onSelectItem == 'function') {\n                        that._option.onSelectItem.call(that, i, index, value);\n                    }\n                };\n            }(_i));\n        }\n        for (var _i2 = 0; _i2 < cols.length; _i2++) {\n            //设置滚轮的选项\n            that.setValue(_i2, that._option.setValues[_i2]);\n        }\n        //是否可见\n        this._visible = false;\n    }\n    //是否可见\n\n\n    _createClass(Picker, [{\n        key: \"show\",\n\n        /**\r\n         * 显示\r\n         */\n        value: function show() {\n            this._frame.showCover();\n            this._frame.showFrame();\n            this._visible = true;\n        }\n        /**\r\n         * 隐藏\r\n         */\n\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this._frame.hideCover();\n            this._frame.hideFrame();\n            this._visible = false;\n        }\n        /**\r\n         * 关闭\r\n         */\n\n    }, {\n        key: \"close\",\n        value: function close() {\n            this._frame.close();\n            this._frame.hideCover();\n            this._option = null;\n            this._wheels.forEach(function (wheel) {\n                return wheel.destroy();\n            });\n            this._wheels = null;\n            this._frame = null;\n            this._cols = null;\n        }\n        /**\r\n         * 设置滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {any[]} list      滚轮的可选值列表\r\n         * @param {*} defaultValue  默认值,如果为空会以当前值作为默认值。如果没有当前值会以第一个值作为默认值\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(index, list, defaultValue) {\n            if (this._wheels[index]) this._wheels[index].setOptions(list, defaultValue);\n        }\n        /**\r\n         * 获取滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions(index) {\n            if (this._wheels[index]) {\n                return this._wheels[index].getOptions();\n            } else {\n                return null;\n            }\n        }\n        /**\r\n         * 设置滚轮的可选值\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {*} value         设置的值\r\n         */\n\n    }, {\n        key: \"setValue\",\n        value: function setValue(index, value) {\n            if (this._wheels[index]) this._wheels[index].selectOption(value);\n        }\n        /**\r\n         * 获取滚轮的值,如果index为空表示获取所有滚轮的值\r\n         * @param {number} index    滚轮的index,从0开始记录。如果为空表示获取所有滚轮的值\r\n         */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (index != null) {\n                if (this._wheels[index]) return this._wheels[index].getValue();\n            } else {\n                var values = [];\n                var i;\n                for (i = 0; i < this._cols.length; i++) {\n                    values.push(this._wheels[i].getValue());\n                }\n                return values;\n            }\n        }\n    }, {\n        key: \"visible\",\n        get: function get() {\n            return this._visible;\n        }\n    }]);\n\n    return Picker;\n}();\n\nexports.Picker = Picker;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 将用户数据封装为列对象\r\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Col = function () {\n    function Col(colOption) {\n        _classCallCheck(this, Col);\n\n        this.prefix = \"\";\n        this.suffix = \"\";\n        this.labelKey = \"label\";\n        this.valueKey = \"value\";\n        //列的类型，0：未知 1：字符串数组 2：对象数组\n        this.type = 0;\n        //如果option是一个数组,视为仅存在options的情况\n        if (Array.isArray(colOption)) {\n            this.options = colOption;\n            this.type = 1;\n        } else {\n            this.options = colOption.options || [];\n            if (this.options.length > 0) {\n                if (typeof this.options[0] === 'string') {\n                    this.type = 1;\n                } else {\n                    this.type = 2;\n                }\n            } else {\n                this.type = 0;\n            }\n            this.prefix = colOption.prefix || \"\";\n            this.suffix = colOption.suffix || \"\";\n            this.labelKey = colOption['labelKey'] || this.labelKey;\n            this.valueKey = colOption['valueKey'] || this.valueKey;\n        }\n    }\n\n    _createClass(Col, [{\n        key: \"push\",\n        value: function push(item) {\n            this.options.push(item);\n        }\n    }, {\n        key: \"set\",\n        value: function set(index, item) {\n            if (this.type == 0) {\n                this.type = typeof item === 'string' ? 1 : 2;\n            }\n            this.options[index] = item;\n        }\n    }, {\n        key: \"setCol\",\n        value: function setCol() {}\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.valueKey];\n            }\n        }\n    }, {\n        key: \"getLabel\",\n        value: function getLabel(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.labelKey];\n            }\n        }\n    }]);\n\n    return Col;\n}();\n\nexports.Col = Col;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * 用户默认配置\r\n */\nvar defaultOptions = {\n    cols: [[]],\n    setValues: [],\n    onSelectItem: null,\n    onOkClick: null,\n    onCancelClick: null,\n    fontSize: 15,\n    isPerspective: true,\n    hasVoice: true,\n    title: '',\n    buttons: [\"确定\", \"取消\"],\n    zIndex: 100\n};\nexports.default = defaultOptions;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar animationUtil_1 = __webpack_require__(2);\nvar constant_1 = __webpack_require__(1);\nvar perspectiveConversion = __webpack_require__(3);\nvar tick = __webpack_require__(4)();\n\nvar Wheel3D = function () {\n    function Wheel3D(picker, col, option, index) {\n        _classCallCheck(this, Wheel3D);\n\n        ///////////////////滚轮显示属性\n        //最大转角\n        this.maxAngle = 0;\n        //最小转角,设置可选项列表后需重新计算\n        this.minAngle = 0;\n        //滚轮的实际半径,因为有透视效果,所以滚轮实际半径比容器的高度的一半还小。根据勾股定理,计算得实际半径是容器高度的根号5分之1\n        this.radius = constant_1.default.WHEEL_HEIGHT / Math.sqrt(5);\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        this.visibleAngle = 0;\n        //获取0.01em的实际像素值\n        this.em = function () {\n            return Math.min(window.innerWidth, window.innerHeight) / 100;\n        };\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的转角,用于计算滚轮是否转动过\n        this.originalAngle = 0;\n        //一次拖动过程中滚轮被转动的最大角度\n        this.lastIndexAngle = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        this.changeMaxAngle = 0;\n        //当前滚轮转角\n        this.angle = 0;\n        //当前被选值的index\n        this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        this.isDraging = false;\n        //正在播放的刻度音\n        this.audio = null;\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n        ///////////////////主要属性\n        //picker对象\n        this.picker = picker;\n        //option对象\n        this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        this.index = index;\n        //转轮主体\n        this.dom = domUtil_1.default('<div class=\"picker-wheel3d\">' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '<ul></ul>' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '</div>').css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        this.contains = this.dom.find('ul');\n        ///////////////////滚轮显示属性\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        this.visibleAngle = 90 - Math.acos(this.radius / constant_1.default.WHEEL_HEIGHT * 2) / Math.PI * 180;\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchstart\", startDrag);\n        this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchmove\", drag);\n        this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        this.dom[0].addEventListener(\"touchend\", endDrag);\n        this.dom[0].addEventListener(\"mouseup\", endDrag);\n        this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //初始化标签\n        this.dom.find(\".picker-label\").css(\"transform\", \"translateZ(\" + this.radius / 100 + \"em) scale(0.75)\");\n        //设置标签\n        this.setSuffix(col.suffix);\n        this.setPrefix(col.prefix);\n        this.setOptions(col.options, null, true);\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel3D, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalAngle = this.angle;\n            this.changeMaxAngle = 0;\n            this.lastIndexAngle = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算转角变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeAngle = (perspectiveConversion(this.lastY, this.radius, constant_1.default.WHEEL_HEIGHT) - perspectiveConversion(y, this.radius, constant_1.default.WHEEL_HEIGHT)) / Math.PI * 180;\n            var angle = changeAngle + this.angle;\n            //记录滚轮滚动的最大转角\n            this.changeMaxAngle = Math.max(Math.abs(this.originalAngle - angle), this.changeMaxAngle);\n            //记录当前角度\n            this.setAngle(angle);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeAngle) {\n                this.speed = changeAngle / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的angle。之所以乘4是根据偏移效果经验得到的\n            var changeAngle = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var angle = changeAngle + this.angle;\n            //根据角度计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByAngle(angle);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小转角\n            this.maxAngle = constant_1.default.WHEEL_ITEM_ANGLE * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label,\n\n            //显示标签的dom的高度,要求根据wheelItemAngle计算,使各个标签dom的边缘刚好挨在一起,确保没有空细\n            height = this.radius * Math.PI * constant_1.default.WHEEL_ITEM_ANGLE / 180;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(角度)\n                var li = domUtil_1.default(\"<li></li>\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var angle = constant_1.default.WHEEL_ITEM_ANGLE * -index;\n                //为了解决3d放大后，文字模糊的问题，故采用zoom=2的方案，所以li的尺寸方面，统一缩小一半\n                li.css(\"transform\", \"rotateX(\" + angle + \"deg) translateZ(\" + that.radius / 100 + \"em) scale(0.75)\").css(\"padding\", height / 5.9 / 100 + \"em 0\").css(\"height\", height / 100 + \"em\").css(\"line-height\", height / 100 + \"em\");\n                //将标签的角度保存到其dom中\n                li.data(\"angle\", angle);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxAngle < 1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            //刷新标签\n            this.flushLabel();\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 获得用户可选的标签\r\n        */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var angle = this.calcAngleBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _angle = animationUtil_1.default.easeOut(start, that.angle, angle - that.angle, during);\n                    if (Math.abs(_angle - angle) < 1) {\n                        _angle = angle;\n                    }\n                    that.setAngle(_angle);\n                    if (_angle != angle) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setAngle(angle);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定角度,自动设定标签的各个位置\r\n        * @param {number} angle\t\t要转到的角度\r\n        * @returns {number}\t\t\t修正后的角度,即最终的实际角度\r\n        */\n\n    }, {\n        key: \"setAngle\",\n        value: function setAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = this.rangeAngle(angle);\n            // 如果角度变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexAngle = this.lastIndexAngle;\n                var index = this.calcSelectedIndexByAngle(angle);\n                if (lastIndexAngle != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexAngle = index;\n            }\n            this.contains.css(\"transform\", \"rotateX(\" + angle + \"deg)\");\n            this.angle = angle;\n            this.flushLabel();\n            return angle;\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByAngle\",\n        value: function calcSelectedIndexByAngle(angle) {\n            angle = this.rangeAngle(angle);\n            return Math.round(Math.abs(angle / constant_1.default.WHEEL_ITEM_ANGLE));\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcAngleBySelectedIndex\",\n        value: function calcAngleBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_ANGLE;\n        }\n        /**\r\n        * 限制转角超过极限值\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeAngle\",\n        value: function rangeAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = Math.max(this.minAngle, angle);\n            angle = Math.min(this.maxAngle, angle);\n            return angle;\n        }\n        /**\r\n        * 刷新各个标签的状态,确定应该显示哪些标签\r\n        */\n\n    }, {\n        key: \"flushLabel\",\n        value: function flushLabel() {\n            var that = this;\n            this.dom.find(\"li\").each(function (index, li) {\n                li = domUtil_1.default(li);\n                var angle = li.data(\"angle\") + that.angle;\n                if (angle > that.visibleAngle || angle < -that.visibleAngle) {\n                    if (li.css(\"display\") != \"none\") {\n                        li.css(\"display\", \"none\");\n                    }\n                } else {\n                    if (li.css(\"display\") != \"block\") {\n                        li.css(\"display\", \"block\");\n                    }\n                }\n            });\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n    }]);\n\n    return Wheel3D;\n}();\n\nexports.Wheel3D = Wheel3D;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n(function (global, factory) {\r\n\t\"use strict\"\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\tmodule.exports = factory;\r\n\t} else {\r\n\t\tglobal.$ = factory(global.document);\r\n\t}\r\n})(typeof window !== \"undefined\" ? window : this, function (document) {\r\n\r\n\t//用于插入使用的DocumentFragment\r\n\tvar fragment = document.createDocumentFragment();\r\n\r\n\t//将html解析为my-jquery对象\r\n\tfunction buildHTML(selector) {\r\n\t\tselector = selector.trim();\r\n\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\tif(selector[0] === \"<\"){\r\n\t\t\t//用于使用innerHTML生成dom的div\r\n\t\t\tvar div = document.createElement(\"DIV\");\r\n\t\t\tdiv.innerHTML = selector;\r\n\t\t\treturn $(div.children);\r\n\t\t} else {\r\n\t\t\treturn $([]);\r\n\t\t}\r\n\t}\r\n\r\n\t//将html解析为fragment对象\r\n\tfunction buildFragment(dom) {\r\n\t\tvar dom = $(dom);\r\n\t\tfragment.textContent = \"\";\r\n\t\tdom.each(function (i, item) {\r\n\t\t\tfragment.appendChild(item);\r\n\t\t})\r\n\t\treturn fragment;\r\n\t}\r\n\r\n\t//将各种要插入对象做成一个buildFragment,根据fn插入\r\n\tfunction insertDom(targets, dom, fn) {\r\n\t\t//如果插入到的元素是多个,克隆之后再插入\r\n\t\ttargets.each(function (i, item) {\r\n\t\t\tif(i != targets.length-1){\r\n\t\t\t\tfn(this, buildFragment(dom.clone()));\r\n\t\t\t} else {\r\n\t\t\t\tfn(this, buildFragment(dom));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//一个模板,用于生成setter和getter重载函数\r\n\tfunction access(myjq, setter, getter, key, value) {\r\n\t\t//是否是setter方法,如果是setter方法,value不能是undefined\r\n\t\treturn value === undefined ? (myjq.length ? getter(myjq[0], key) : undefined) : myjq.each(function (index, item) {\r\n\t\t\treturn setter(item, key, value)\r\n\t\t})\r\n\t}\r\n\r\n    //短横线隔开式命名转驼峰命名\r\n    function toCamelCase(name) {\r\n        return name.replace(/-\\S/g, function (splitChar) {\r\n            return splitChar[1].toUpperCase();\r\n        });\r\n    }\r\n\r\n    //克隆dom\r\n\tfunction domClone(item, hasSystem) {\r\n\t\tvar dom = item.cloneNode(true);\r\n\t\thasSystem && item[dataKey] && (dom[dataKey] = item[dataKey]);\r\n\r\n\t\treturn dom;\r\n\t}\r\n\r\n\t//删除dom时候使用\r\n\tfunction clearData(item) {\r\n\t\tvar arr;\r\n\t\tif(item.nodeType == 1){\r\n\t\t\tdelete item[dataKey];\r\n\t\t\tarr = item.children;\r\n\t\t} else if(item && item.length != null){\r\n\t\t\tarr = item;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor(var i; i < arr.length; i++){\r\n\t\t\tclearData(arr[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t//防止冲突的id\r\n\tvar $$mjid = (\"\" + Date.now() +  Math.random()).replace('.', '');\r\n\t//dom缓存的key\r\n\tvar dataKey = \"$$mjid\" + $$mjid\r\n\r\n\tvar $ = function(selector){\r\n\t\treturn new $.fn.init(selector);\r\n\t}\r\n\r\n\t$.fn = $.prototype = {\r\n\t\t//唯一id\r\n\t\t$$mjid : $$mjid,\r\n\r\n\t\t//jquery对象原型\r\n\t\tinit : function(selector){\r\n\r\n\t\t\t//如果没有选择器，直接返回\r\n\t\t\tif(!selector){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof selector == \"string\"){\r\n\t\t\t\t//如果是字符串，表示可能是选择器，或者是构建字符串\r\n\t\t\t\tselector = selector.trim();\r\n\t\t\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\t\t\tif(selector[0] === \"<\"){\r\n\t\t\t\t\treturn $(buildHTML(selector));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//如果不是，说明是选择器，直接选择\r\n\t\t\t\t\tvar doms = document.querySelectorAll(selector);\r\n\r\n\t\t\t\t\t//递归调用$，从新封装一次\r\n\t\t\t\t\treturn $(doms);\r\n\t\t\t\t}\r\n\t\t\t} else if(typeof selector == \"object\" && !isNaN(selector[\"length\"])){\r\n\t\t\t\t//类似数组就表示是数组。遍历数组或者是$.init对象，如果里面是dom元素封装返回\r\n\t\t\t\tfor(var i = 0,length = 0; i < selector.length; i++){\r\n\t\t\t\t\tvar dom = selector[i];\r\n\t\t\t\t\tif(dom && dom.nodeType == 1){\r\n\t\t\t\t\t\tthis[length] = dom;\r\n\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.length = length;\r\n\t\t\t\treturn this;\r\n\t\t\t} else if(selector.nodeType){\r\n\t\t\t\t//如果本身就是一个dom元素，直接封装返回\r\n\t\t\t\tthis.length = 1;\r\n\t\t\t\tthis[0] = selector;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//使init变为类数组对象\r\n\t\tlength : 0,\r\n\r\n\t\t//模仿each\r\n\t\teach : function (fn) {\r\n\t\t\tfor(var i =0; i < this.length; i++){\r\n\t\t\t\tif(typeof fn == 'function' && fn.call(this[i], i, this[i]) === false){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\teq: function(i){\r\n\t\t\treturn $(this[i]);\r\n\t\t},\r\n\r\n\t\t//往集合增加一个dom\r\n\t\tadd: function (item) {\r\n\t\t\tif(item && item.nodeType == 1){\r\n\t\t\t\tthis[this.length++] = item;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t//在某个节点下面找div\r\n\t\tfind: function(selector){\r\n\t\t\treturn access(this,null,function (dom, selector) {\r\n\t\t\t\treturn $(dom.querySelectorAll(selector));\r\n\t\t\t},selector)\r\n\t\t},\r\n\r\n\t\t//用于将文档增添于\r\n\t\tappend : function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tappendTo: function(parent){\r\n\t\t\t$(parent).append(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprepend: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.childNodes.length ?  parent.insertBefore(child, parent.childNodes[0]) : parent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprependTo: function(parent){\r\n\t\t\t$(parent).prepend(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tafter: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tif(parent.parentNode.lastChild == parent){\r\n\t\t\t\t\tparent.parentNode.appendChild(child);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.parentNode.insertBefore(child, parent.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertAfter: function(parent){\r\n\t\t\t$(parent).after(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tbefore: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.parentNode.insertBefore(child, parent);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertBefore: function(parent){\r\n\t\t\t$(parent).before(this);\r\n\t\t\treturn $(this[0]);\r\n\t\t},\r\n\t\t\r\n\t\tclone: function () {\r\n\t\t\tvar arr = [];\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\tarr.push(domClone(item, true));\r\n\t\t\t})\r\n\t\t\treturn $(arr);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 删除dom\r\n\t\t */\r\n\t\tremove: function () {\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\titem.parentElement && item.parentElement.removeChild(item)\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdata: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tif(!item[dataKey]){\r\n\t\t\t\t\titem[dataKey] = {};\r\n\t\t\t\t}\r\n\t\t\t\titem[dataKey][key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[dataKey] && item[dataKey][key];\r\n\t\t\t}, key, value);\r\n\t\t},\r\n\r\n\t\tattr: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.setAttribute(key, value)\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.getAttribute(key);\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\tremoveAttr: function (key) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(key) {\r\n\t\t\t\t\titem.removeAttr(key);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\taddClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.add(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tremoveClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.remove(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\thasClass: function (className) {\r\n\t\t\treturn this.length ? this[0].classList.contains(className) : false;\r\n\t\t},\r\n\r\n\t\ttoggleClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\tif(item.classList.contains(className)){\r\n\t\t\t\t\t\titem.classList.remove(className);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.classList.add(className);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tprop: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem[key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[key];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\r\n\t\thtml: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tclearData(item.children || {length : 0});\r\n\t\t\t\titem.innerHTML = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.innerHTML;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\ttext: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.textContent = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.textContent;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\tval: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.value = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.value;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\thide: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(item.style.display){\r\n\t\t\t\t\t$(item).data(\"my-jquery-style-display\",item.style.display);\r\n\t\t\t\t}\r\n\t\t\t\titem.style.display=\"none\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tshow: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\titem.style.display= $(item).data(\"my-jquery-style-display\") || \"\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tcss: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.style[toCamelCase(key)] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.style[toCamelCase(key)];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\ton: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                if(typeof fn != 'function'){\r\n                \treturn;\r\n                }\r\n\r\n            \t//注册的函数\r\n            \tvar cacheFn = function (event) {\r\n\t\t\t\t\tif(fn.call(this, event) === false){\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t}\r\n                }\r\n                cacheFn.fn = fn;\r\n\r\n                //缓存该函数\r\n                var cacheEvent = $(item).data(\"my-jquery-event-cache\") || {};\r\n                cacheEvent[eventName] = cacheEvent[eventName] || [];\r\n                cacheEvent[eventName].push(cacheFn)\r\n\r\n                this.addEventListener(eventName, cacheFn, false);\r\n                $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n            })\r\n\t\t},\r\n\t\toff: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                var cacheEvent = $(this).data(\"my-jquery-event-cache\");\r\n\r\n                if(!cacheEvent)\r\n                \treturn;\r\n\r\n                var self = this;\r\n                if(cacheEvent[eventName] instanceof Array){\r\n                \tvar tempArr = [];\r\n                    cacheEvent[eventName].forEach(function (cacheFn) {\r\n                        if(typeof fn == 'function'){\r\n                        \tif( fn == cacheFn.fn){\r\n                                self.removeEventListener(eventName, cacheFn, false);\r\n                            } else {\r\n                                tempArr.push(cacheFn)\r\n                            }\r\n                        } else {\r\n                            self.removeEventListener(eventName, cacheFn, false);\r\n\t\t\t\t\t\t}\r\n                    })\r\n\r\n                    cacheEvent[eventName] = tempArr;\r\n                    $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n                }\r\n            })\r\n\r\n\t\t},\r\n\t\ttoggle: function(eventName){\r\n            return this.each(function (i, item) {\r\n            \tif(typeof this[eventName] == 'function'){\r\n                    this[eventName]();\r\n\t\t\t\t}\r\n            })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t$.fn.init.prototype = $.fn;\r\n\r\n\treturn $;\r\n})\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Created by njz on 16/11/29.\r\n */\n\n// 对动画的封装,支持requestAnimationFrame使用requestAnimationFrame封装。\n// 若览器不支持requestAnimationFrame情况下的回退，回退到使用setTmeout的情况。\nvar requestAnimationFrame, cancelAnimationFrame;\nvar lastTime = 0;\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\nrequestAnimationFrame = requestAnimationFrame || window.requestAnimationFrame || function (callback, element) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n    }, timeToCall);\n    lastTime = currTime + timeToCall;\n    return id;\n};\ncancelAnimationFrame = cancelAnimationFrame || window.cancelAnimationFrame || window.cancelRequestAnimationFrame || function (id) {\n    clearTimeout(id);\n};\n\nmodule.exports = {\n    /**\r\n     * 动画开始函数\r\n     * @param fn\r\n     * @returns {number}        动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return requestAnimationFrame(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        cancelAnimationFrame(animationId);\n    },\n    easeIn: function easeIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n    },\n    /**\r\n     * 淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n        return -c / 2 * (--t * (t - 2) - 1) + b;\n    }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = { \"0\": 0, \"1\": 0.006180474730027776, \"2\": 0.012361758667979887, \"3\": 0.01854466178595427, \"4\": 0.024729995586343003, \"5\": 0.030918573871856408, \"6\": 0.03711121352142655, \"7\": 0.043308735273995536, \"8\": 0.04951196452223301, \"9\": 0.05572173211827738, \"10\": 0.06193887519365582, \"11\": 0.06816423799561012, \"12\": 0.07439867274213974, \"13\": 0.08064304049816978, \"14\": 0.08689821207536214, \"15\": 0.0931650689582126, \"16\": 0.09944450425921704, \"17\": 0.1057374237060475, \"18\": 0.11204474666385271, \"19\": 0.11836740719599605, \"20\": 0.12470635516675682, \"21\": 0.13106255738976524, \"22\": 0.13743699882620672, \"23\": 0.1438306838371266, \"24\": 0.1502446374944947, \"25\": 0.15667990695605222, \"26\": 0.163137562909363, \"27\": 0.16961870109094018, \"28\": 0.1761244438868085, \"29\": 0.18265594202141244, \"30\": 0.189214376342388, \"31\": 0.1958009597093892, \"32\": 0.20241693899591295, \"33\": 0.20906359721390222, \"34\": 0.21574225577183714, \"35\": 0.2224542768780669, \"36\": 0.22920106610229693, \"37\": 0.23598407510944647, \"38\": 0.24280480458155373, \"39\": 0.24966480734504126, \"40\": 0.2565656917224997, \"41\": 0.26350912513022323, \"42\": 0.2704968379450743, \"43\": 0.27753062766690556, \"44\": 0.28461236340577195, \"45\": 0.2917439907265723, \"46\": 0.298927536887646, \"47\": 0.30616511651426775, \"48\": 0.3134589377530486, \"49\": 0.3208113089590395, \"50\": 0.32822464597399087, \"51\": 0.3357014800618854, \"52\": 0.3432444665767064, \"53\": 0.3508563944476478, \"54\": 0.35854019657886727, \"55\": 0.3662989612747276, \"56\": 0.37413594481766604, \"57\": 0.38205458534478537, \"58\": 0.39005851819157766, \"59\": 0.3981515928975172, \"60\": 0.4063378920994586, \"61\": 0.41462175257587425, \"62\": 0.42300778874928274, \"63\": 0.4315009190073606, \"64\": 0.4401063952672662, \"65\": 0.4488298362852176, \"66\": 0.45767726530766856, \"67\": 0.4666551527757603, \"68\": 0.47577046493656705, \"69\": 0.4850307193901132, \"70\": 0.4944440488195467, \"71\": 0.5040192744255141, \"72\": 0.5137659909310855, \"73\": 0.523694665462527, \"74\": 0.5338167531736872, \"75\": 0.5441448332086339, \"76\": 0.5546927695451231, \"77\": 0.5654759025098686, \"78\": 0.5765112784180985, \"79\": 0.5878179270265199, \"80\": 0.5994171995371129, \"81\": 0.6113331840998124, \"82\": 0.6235932216642447, \"83\": 0.6362285534378791, \"84\": 0.6492751433974548, \"85\": 0.6627747373240171, \"86\": 0.6767762470698537, \"87\": 0.6913375909489355, \"88\": 0.7065281883018284, \"89\": 0.7224324166263504, \"90\": 0.7391545276252866, \"91\": 0.7568258524516188, \"92\": 0.7756157498195769, \"93\": 0.7957489855645078, \"94\": 0.8175348626997212, \"95\": 0.8414195586288256, \"96\": 0.8680892494981647, \"97\": 0.8987014263951989, \"98\": 0.935517870959519, \"99\": 0.9843911534692572, \"100\": 1.1071487177940906 };\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"data:audio/mpeg;base64,SUQzAwAAAAACPVRBTEIAAAABAAAAVENPTgAAAAEAAABUSVQyAAAAAQAAAFRQRTEAAAABAAAAVFJDSwAAAAEAAABUWUVSAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAAEAAAGuQCPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+urq6urq6urq6urq6urq6urq6urq6urq6u6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6/////////////////////////////////8AAAAeTEFNRTMuOTlyBJwAAAAALhMAADUgJANyQQABrgAABrkfUWHWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//vAxAAAA5gBQ3QAAArvJu6/M4BIhIKgoegEQ8/8DMz/Pgf+Yf8BwB+Z+b+ADgDw/8+o7VqAHMDBTAEFQenlPGADeAWECp4LYcVu9VS9CSRlFhkxw1oMkWM4jYWZOwux2kYYKQWsQ/2ZaUwdEtrLj/YqSyOwMh4qeJUr7XMoYikU+IQ0Fl0qjk87jLrdekgfWb+RhON84zDsakKgs3Zou0k5nT9ylE43Waiz7cwfWGpbM3rXMP1hzuFJScikNSFdLvQXPWYEqZ4yq3KaWd1zPOx//nn+cHSnUZqZYyWap5ZWy7/41ioa/pDolQNStZm24myAA0oAUsytJS4qVtLyfMrafUJqVaJSmQrtBIraqcZqrtu95KNI5Tb+dX71Vet2iXNymBj6gporC+5XVsSQTKC2K/35teC8/0KL/Ff/DEEyiT8rZKIyGuoyeRCzI7wpna5Q2KpYgzmMbLM2XlUCNv/oaWZSlouqkB3Zb7aW79MPu16Zr2jv1vKHhqqZmIaHhnb/SsKAAAAAnUXYNay0jZfhQ+kLcL/BQ6ZSJ0DwHKktA4gjBzi4QMDNC+5PGxEWWbh40wv+9jpbNzzEOEnImHyHThqblErKOHjUUkLlFjHeHR6Nq1opOiMmMmikPRZ/u/x0Cth2kTD7P+kpMxMPLuzvDuzxt5IyAAAAAT4RIEE6AqAAYh4w4CYYcQCEJbMcTOkDjlQ4CXbZKsEICzN+AkpphSMMLBX4hBMIAvInATJvUotAhWGpsGVGrKHEJUEr6wj7S4DFigYJAEKqhw1KjypsnuPCUiwz6RR9m+iRb5Fxo0DuEj06kR1A1DDs5jIKWtturEoLjFDV5jvHH8cef///1e28q4udUp5b876l8u22Gw9HwtDYAAAAAADQL1KAwBl18Zc1OLY7qQ/Dtb/YVtTHz+dBb4SUL6wf9iQ0E6aaWnOVk//Zl9dJdnet0b1//9sX76evxGZ3NZ//+zDE9oBKCIFfvPMACOsSai6eIAXrTEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+3DE9IAOXMFX+ZiAAoaaKj81kABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sQxPwACcCNT7mngAAAAD/DgAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUQUcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/w==\"\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar animationUtil_1 = __webpack_require__(2);\nvar constant_1 = __webpack_require__(1);\nvar perspectiveConversion = __webpack_require__(3);\nvar tick = __webpack_require__(4)();\n\nvar Wheel = function () {\n    function Wheel(picker, col, option, index) {\n        _classCallCheck(this, Wheel);\n\n        ///////////////////滚轮显示属性\n        //最大位移\n        this.maxDistance = 0;\n        //最小位移,设置可选项列表后需重新计算\n        this.minDistance = 0;\n        //获取0.01em的实际像素值\n        this.em = function () {\n            return Math.min(window.innerWidth, window.innerHeight) / 100;\n        };\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的位移,用于计算滚轮是否转动过\n        this.originalDistance = 0;\n        //一次拖动过程中滚轮被转动的最大位移\n        this.lastIndexDistance = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        this.changeMaxDistance = 0;\n        //当前滚轮位移\n        this.distance = 0;\n        //当前被选值的index\n        this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        this.isDraging = false;\n        //正在播放的刻度音\n        this.audio = null;\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n        ///////////////////主要属性\n        //picker对象\n        this.picker = picker;\n        //option对象\n        this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        this.index = index;\n        //转轮主体\n        this.dom = domUtil_1.default(\"<div class=\\\"picker-wheel\\\">\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n                <ul></ul>\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n            </div>\").css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        this.contains = this.dom.find('ul');\n        this.setDistance(0);\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchstart\", startDrag);\n        this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchmove\", drag);\n        this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        this.dom[0].addEventListener(\"touchend\", endDrag);\n        this.dom[0].addEventListener(\"mouseup\", endDrag);\n        this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //设置标签\n        this.setSuffix(col.suffix);\n        this.setPrefix(col.prefix);\n        this.setOptions(col.options, null, true);\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalDistance = this.distance;\n            this.changeMaxDistance = 0;\n            this.lastIndexDistance = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算位移变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeDistance = this.lastY - y;\n            var distance = changeDistance + this.distance;\n            //记录滚轮滚动的最大位移\n            this.changeMaxDistance = Math.max(Math.abs(this.originalDistance - distance), this.changeMaxDistance);\n            //记录当前位移\n            this.setDistance(distance);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeDistance) {\n                this.speed = changeDistance / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的Distance。之所以乘4是根据偏移效果经验得到的\n            var changeDistance = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var distance = changeDistance + this.distance;\n            //根据位移计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByDistance(distance);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小位移\n            this.maxDistance = constant_1.default.WHEEL_ITEM_HIGHT * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(位移)\n                var li = domUtil_1.default(\"<li></li>\").css('top', constant_1.default.WHEEL_ITEM_HIGHT / 100 * i + \"em\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var distance = constant_1.default.WHEEL_ITEM_HIGHT * -index;\n                //将标签的位移保存到其dom中\n                li.data(\"distance\", distance);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxDistance < 0.1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 获得用户可选的标签\r\n        */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var distance = this.calcDistanceBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _Distance = animationUtil_1.default.easeOut(start, that.distance, distance - that.distance, during);\n                    if (Math.abs(_Distance - distance) < 1) {\n                        _Distance = distance;\n                    }\n                    that.setDistance(_Distance);\n                    if (_Distance != distance) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setDistance(distance);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定位移,自动设定标签的各个位置\r\n        * @param {number} distance\t\t要转到的位移\r\n        * @returns {number}\t\t\t修正后的位移,即最终的实际位移\r\n        */\n\n    }, {\n        key: \"setDistance\",\n        value: function setDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = this.rangeDistance(distance);\n            // 如果位移变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexDistance = this.lastIndexDistance;\n                var index = this.calcSelectedIndexByDistance(distance);\n                if (lastIndexDistance != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexDistance = index;\n            }\n            this.contains.css(\"transform\", \"translateY(\" + (constant_1.default.WHEEL_HEIGHT / 2 - constant_1.default.WHEEL_ITEM_HIGHT / 2 - distance) / 100 + \"em)\");\n            this.distance = distance;\n            return distance;\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByDistance\",\n        value: function calcSelectedIndexByDistance(distance) {\n            distance = this.rangeDistance(distance);\n            return Math.round(Math.abs(distance / constant_1.default.WHEEL_ITEM_HIGHT));\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param Distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcDistanceBySelectedIndex\",\n        value: function calcDistanceBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_HIGHT;\n        }\n        /**\r\n        * 限制位移超过极限值\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeDistance\",\n        value: function rangeDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = Math.max(this.minDistance, distance);\n            distance = Math.min(this.maxDistance, distance);\n            return distance;\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n    }]);\n\n    return Wheel;\n}();\n\nexports.Wheel = Wheel;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    /**\r\n     * 兼容es7的assign方法，这样可以省略polyfill\r\n     * @param {object} target\r\n     * @param {...object[]} source\r\n     * @returns {object}\r\n     */\n    assign: function assign(target) {\n        for (var _len = arguments.length, source = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            source[_key - 1] = arguments[_key];\n        }\n\n        // 第一个参数为空，则抛错\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert first argument to object');\n        }\n        var to = Object(target);\n        // 遍历剩余所有参数\n        for (var i = 1; i < arguments.length; i++) {\n            var nextSource = arguments[i];\n            // 参数为空，则跳过，继续下一个\n            if (nextSource === undefined || nextSource === null) {\n                continue;\n            }\n            nextSource = Object(nextSource);\n            // 获取改参数的所有key值，并遍历\n            var keysArray = Object.keys(nextSource);\n            for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                var nextKey = keysArray[nextIndex];\n                var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                // 如果不为空\b且可枚举，则直接浅拷贝赋值\n                if (desc !== undefined && desc.enumerable) {\n                    to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n        return to;\n    }\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nvar _constant = __webpack_require__(1);\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nvar _browserUtil = __webpack_require__(5);\n\nvar _browserUtil2 = _interopRequireDefault(_browserUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//构建主框架\nfunction Frame(picker, option) {\n\n\t//picker对象\n\tthis.picker = picker;\n\t//option\n\tthis.option = option;\n\n\t//构建cover\n\tthis.cover = (0, _domUtil2.default)(\"<div class='my-picker-cover' style='z-index: \" + option.zIndex + \"'>\").hide();\n\n\tthis.frame = (0, _domUtil2.default)('<div class=\"picker picker-frame\" style=\"z-index: ' + (option.zIndex + 1) + '\">' + '<header class=\"picker-head\">' + '<a class=\"picker-btn-cancel\"><span class=\"picker-header-text\"></span></a>' + '<h4 class=\"picker-title\"><span class=\"picker-header-text\"></span></h4>' + '<span class=\"picker-selected\">已选0</span>' + '<a class=\"picker-btn-ok\"><span class=\"picker-header-text\"></span></a>' + '</header>' + '<div class=\"picker-body\"></div>' + '</div>').css('height', (_constant2.default.WHEEL_HEIGHT + 15) / 100 + \"em\").hide();\n\tthis.frame.find(\".picker-body\")[0].addEventListener('touchstart', function (event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t});\n\n\t//如果是3d透视模式，增加3d透视的样式\n\tif (!_browserUtil2.default.isIE() && this.option.isPerspective) {\n\t\tthis.frame.addClass('s-3d').find(\".picker-body\").css(\"perspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"webkitPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"mozPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"msPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\");\n\t}\n\n\t//设置标题按钮名\n\tthis.frame.find(\".picker-title .picker-header-text\").text(option.title);\n\tthis.frame.find(\".picker-btn-cancel .picker-header-text\").text(option.buttons[1] || '取消');\n\tthis.frame.find(\".picker-btn-ok .picker-header-text\").text(option.buttons[0] || '确定');\n\n\t(0, _domUtil2.default)(\"body\").append(this.frame).append(this.cover);\n\n\t//绑定主架的事件\n\tvar that = this;\n\tthis.frame.find(\".picker-btn-cancel\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onCancelClick == 'function') {\n\t\t\tthat.option.onCancelClick.call(that.picker);\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\tthis.frame.find(\".picker-btn-ok\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onOkClick == 'function') {\n\t\t\tvar result = that.option.onOkClick.call(that.picker, picker.getValue());\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\n\tthis._resizeHandle = function () {\n\t\tthis.frame.css('fontSize', Math.min(document.documentElement.clientWidth, document.documentElement.clientHeight) + 'px');\n\t}.bind(this);\n\n\twindow.addEventListener('resize', this._resizeHandle);\n\tthis._resizeHandle();\n}\n\nFrame.prototype = {\n\t//显示cover\n\tshowCover: function showCover() {\n\t\tthis.cover.show();\n\t\tthis.cover.addClass('s-open');\n\t},\n\t//隐藏cover\n\thideCover: function hideCover() {\n\t\tthis.cover.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.cover.hide();\n\t\t}, 500);\n\t},\n\t//显示frame\n\tshowFrame: function showFrame() {\n\t\tthis.frame.show();\n\t\tthis.frame.addClass('s-open');\n\t},\n\t//显示frame\n\thideFrame: function hideFrame() {\n\t\tthis.frame.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.frame.hide();\n\t\t}, 500);\n\t},\n\tdom: function dom() {\n\t\treturn this.frame;\n\t},\n\tbody: function body() {\n\t\treturn this.frame.find('.picker-body');\n\t},\n\t//关闭\n\tclose: function close() {\n\t\tthis.remove();\n\t\twindow.removeEventListener('resize', this._resizeHandle);\n\t},\n\t//移除\n\tremove: function remove() {\n\t\tthis.frame.remove();\n\t}\n};\n\nmodule.exports = Frame;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=my-picker.js.map\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// my-picker.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a0d5d4536898ff734511","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"myPicker\"] = factory();\n\telse\n\t\troot[\"myPicker\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar myJquery = __webpack_require__(11);\nexports.default = myJquery(document);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    //滚轮的高度\n    WHEEL_HEIGHT: 85,\n    //在3D透视滚轮中，每个可选项在滚轮上的角度\n    WHEEL_ITEM_ANGLE: 15,\n    //在非3D透视滚轮中，一个滚轮的一个刻度的高度，单位是0.01em\n    // WHEEL_ITEM_HIGHT : 85 - (85 * 41.6 * 2 / 100) ,\n    WHEEL_ITEM_HIGHT: 85 - 85 * 41.6 * 2 / 100,\n    //滚轮因惯性而发生的减速滑动时间\n    WHEEL_TRANSITION_TIME: 400\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar animationUtil = __webpack_require__(12);\nexports.default = {\n    /**\r\n     * 动画开始函数\r\n     * @param {()=>void} fn             东航的回调\r\n     * @returns {number}                动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return animationUtil.startAnimation(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param {number} animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        animationUtil.stopAnimation(animationId);\n    },\n    /**\r\n     * 渐入效果插值\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeIn: function easeIn(t, b, c, d) {\n        return animationUtil.easeIn(t, b, c, d);\n    },\n    /**\r\n     * 淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return animationUtil.easeOut(t, b, c, d);\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param {number} t            current time（当前时间）\r\n     * @param {number} b            beginning value（初始值）\r\n     * @param {number} c            change in value（变化量）\r\n     * @param {number} d            duration（持续时间）\r\n     * @returns {number}            插值的结果\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        return animationUtil.easeInOut(t, b, c, d);\n    }\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar cacheData = __webpack_require__(13);\n\n/**\r\n * 因为perspectiveConversion是个纯函数,因此可以缓存,这样有利于减少计算,增加动画流畅度。尤其在移动端效果十分明显。\r\n * 计算工作由test/calcIntersectionCache完成,这里只是将其计算结果封装为一个函数\r\n */\nmodule.exports = function (y, radius, wheelHeight) {\n\n    //计算比例\n    var ratio = Math.round(y * 200 / wheelHeight);\n    ratio = Math.max(-100, ratio);\n    ratio = Math.min(100, ratio);\n    return y < 0 ? -1 * cacheData[Math.abs(ratio)] : cacheData[Math.abs(ratio)];\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * 滚轮滚动时候发声的函数,是一个单例模式\r\n */\nvar tick = __webpack_require__(14);\n\n\nfunction AudioImpl() {\n    var _this = this;\n\n    this.audio = (0, _domUtil2.default)('<audio></audio>')[0];\n    this.audio.src = tick;\n    (0, _domUtil2.default)(this.audio).on('loadedmetadata', function () {\n        _this.audio.volume = 0.2;\n    });\n    window.aa = this.audio;\n}\n\nAudioImpl.prototype.play = function () {\n    try {\n        if (this.audio) {\n            this.audio.play();\n            this.audio.currentTime = 0;\n        }\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nvar audioImpl;\n\nmodule.exports = function () {\n    if (audioImpl) {\n        return audioImpl;\n    } else {\n        audioImpl = new AudioImpl();\n        return audioImpl;\n    }\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _isIE = void 0;\nvar userAgent = navigator.userAgent;\nexports.default = {\n    /**\r\n     * 是否是IE\r\n     * @returns\r\n     */\n    isIE: function isIE() {\n        if (_isIE == null) {\n            _isIE = function () {\n                var matches = void 0;\n                var tridentMap = {\n                    '4': 8,\n                    '5': 9,\n                    '6': 10,\n                    '7': 11\n                };\n                matches = userAgent.match(/MSIE (\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!+matches[1];\n                }\n                matches = userAgent.match(/Trident\\/(\\d+)/i);\n                if (matches && matches[1]) {\n                    return !!tridentMap[matches[1]] || false;\n                }\n                //we did what we could\n                return false;\n            }();\n        }\n        return _isIE;\n    },\n\n    /**\r\n     * 是否是webkit\r\n     * @returns\r\n     */\n    isWebKit: function isWebKit() {\n        return userAgent.indexOf('AppleWebKit') > -1;\n    },\n\n    /**\r\n     * 是否是火狐\r\n     * @returns\r\n     */\n    isFirefox: function isFirefox() {\n        return userAgent.indexOf('Gecko') > -1 && userAgent.indexOf('KHTML') == -1;\n    }\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Picker_1 = __webpack_require__(7);\nmodule.exports = function (option) {\n    return new Picker_1.Picker(option);\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Col_1 = __webpack_require__(8);\nvar defaultOption_1 = __webpack_require__(9);\nvar Wheel3D_1 = __webpack_require__(10);\nvar Wheel_1 = __webpack_require__(15);\nvar browserUtil_1 = __webpack_require__(5);\nvar util_1 = __webpack_require__(16);\nvar Frame = __webpack_require__(17);\n__webpack_require__(18);\n\nvar Picker = function () {\n    function Picker(options) {\n        _classCallCheck(this, Picker);\n\n        //滚轮列表\n        this._wheels = [];\n        //主框架\n        this._cols = [];\n        this.version = '0.1.4';\n        //用用户配置,覆盖默认配置,生成当前控件的实例的配置\n        this._option = util_1.default.assign({}, defaultOption_1.default, options);\n        //主架\n        this._frame = new Frame(this, this._option);\n        //解析cols属性,将其转换为Cols的数组\n        var cols = [],\n            i = 0;\n        if (Array.isArray(this._option.cols)) {\n            //如果cols为空数组,或者里面的元素是字符串,表示仅一个滚轮,就是cols本身\n            if (this._option.cols.length === 0 || typeof this._option.cols[0] === 'string') {\n                cols.push(new Col_1.Col(this._option.cols));\n            } else {\n                //否则表示数组中的每个元素都是个滚轮\n                for (i = 0; i < this._option.cols.length; i++) {\n                    cols.push(new Col_1.Col(this._option.cols[i]));\n                }\n            }\n        } else {\n            //如果不是数组,表示有cols是一个json形式配置的滚轮\n            cols.push(new Col_1.Col(this._option.cols));\n        }\n        this._cols = cols;\n        //构造滚轮\n        this._wheels = [];\n        var wheel, col;\n        for (var _i = 0; _i < cols.length; _i++) {\n            var _col = cols[_i];\n            //设置滚轮\n            wheel = !browserUtil_1.default.isIE() && this._option.isPerspective ? new Wheel3D_1.Wheel3D(this, _col, this._option, _i) : new Wheel_1.Wheel(this, _col, this._option, _i);\n            this._wheels.push(wheel);\n            this._frame.body().append(wheel.getDOM());\n            //重写wheel的onSelectItem事件\n            var that = this;\n            wheel.addSelectItemListener(function (i) {\n                return function (index, value) {\n                    //如果用户注册了onSelectItem\n                    if (typeof that._option.onSelectItem == 'function') {\n                        that._option.onSelectItem.call(that, i, index, value);\n                    }\n                };\n            }(_i));\n        }\n        for (var _i2 = 0; _i2 < cols.length; _i2++) {\n            //设置滚轮的选项\n            that.setValue(_i2, that._option.setValues[_i2]);\n        }\n        //是否可见\n        this._visible = false;\n    }\n    //是否可见\n\n\n    _createClass(Picker, [{\n        key: \"show\",\n\n        /**\r\n         * 显示\r\n         */\n        value: function show() {\n            this._frame.showCover();\n            this._frame.showFrame();\n            this._visible = true;\n        }\n        /**\r\n         * 隐藏\r\n         */\n\n    }, {\n        key: \"hide\",\n        value: function hide() {\n            this._frame.hideCover();\n            this._frame.hideFrame();\n            this._visible = false;\n        }\n        /**\r\n         * 关闭\r\n         */\n\n    }, {\n        key: \"close\",\n        value: function close() {\n            this._frame.close();\n            this._frame.hideCover();\n            this._option = null;\n            this._wheels.forEach(function (wheel) {\n                return wheel.destroy();\n            });\n            this._wheels = null;\n            this._frame = null;\n            this._cols = null;\n        }\n        /**\r\n         * 设置滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {any[]} list      滚轮的可选值列表\r\n         * @param {*} defaultValue  默认值,如果为空会以当前值作为默认值。如果没有当前值会以第一个值作为默认值\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(index, list, defaultValue) {\n            if (this._wheels[index]) this._wheels[index].setOptions(list, defaultValue);\n        }\n        /**\r\n         * 获取滚轮的可选值列表\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions(index) {\n            if (this._wheels[index]) {\n                return this._wheels[index].getOptions();\n            } else {\n                return null;\n            }\n        }\n        /**\r\n         * 设置滚轮的可选值\r\n         * @param {number} index    滚轮的index,从0开始记录\r\n         * @param {*} value         设置的值\r\n         */\n\n    }, {\n        key: \"setValue\",\n        value: function setValue(index, value) {\n            if (this._wheels[index]) this._wheels[index].selectOption(value);\n        }\n        /**\r\n         * 获取滚轮的值,如果index为空表示获取所有滚轮的值\r\n         * @param {number} index    滚轮的index,从0开始记录。如果为空表示获取所有滚轮的值\r\n         */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (index != null) {\n                if (this._wheels[index]) return this._wheels[index].getValue();\n            } else {\n                var values = [];\n                var i;\n                for (i = 0; i < this._cols.length; i++) {\n                    values.push(this._wheels[i].getValue());\n                }\n                return values;\n            }\n        }\n    }, {\n        key: \"visible\",\n        get: function get() {\n            return this._visible;\n        }\n    }]);\n\n    return Picker;\n}();\n\nexports.Picker = Picker;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * @file 将用户数据封装为列对象\r\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Col = function () {\n    function Col(colOption) {\n        _classCallCheck(this, Col);\n\n        this.prefix = \"\";\n        this.suffix = \"\";\n        this.labelKey = \"label\";\n        this.valueKey = \"value\";\n        //列的类型，0：未知 1：字符串数组 2：对象数组\n        this.type = 0;\n        //如果option是一个数组,视为仅存在options的情况\n        if (Array.isArray(colOption)) {\n            this.options = colOption;\n            this.type = 1;\n        } else {\n            this.options = colOption.options || [];\n            if (this.options.length > 0) {\n                if (typeof this.options[0] === 'string') {\n                    this.type = 1;\n                } else {\n                    this.type = 2;\n                }\n            } else {\n                this.type = 0;\n            }\n            this.prefix = colOption.prefix || \"\";\n            this.suffix = colOption.suffix || \"\";\n            this.labelKey = colOption['labelKey'] || this.labelKey;\n            this.valueKey = colOption['valueKey'] || this.valueKey;\n        }\n    }\n\n    _createClass(Col, [{\n        key: \"push\",\n        value: function push(item) {\n            this.options.push(item);\n        }\n    }, {\n        key: \"set\",\n        value: function set(index, item) {\n            if (this.type == 0) {\n                this.type = typeof item === 'string' ? 1 : 2;\n            }\n            this.options[index] = item;\n        }\n    }, {\n        key: \"setCol\",\n        value: function setCol() {}\n    }, {\n        key: \"getValue\",\n        value: function getValue(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.valueKey];\n            }\n        }\n    }, {\n        key: \"getLabel\",\n        value: function getLabel(index) {\n            if (this.type == 1) {\n                return this.options[index];\n            } else {\n                return this.options[index][this.labelKey];\n            }\n        }\n    }]);\n\n    return Col;\n}();\n\nexports.Col = Col;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * 用户默认配置\r\n */\nvar defaultOptions = {\n    cols: [[]],\n    setValues: [],\n    onSelectItem: null,\n    onOkClick: null,\n    onCancelClick: null,\n    fontSize: 15,\n    isPerspective: true,\n    hasVoice: true,\n    title: '',\n    buttons: [\"确定\", \"取消\"],\n    zIndex: 100\n};\nexports.default = defaultOptions;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar animationUtil_1 = __webpack_require__(2);\nvar constant_1 = __webpack_require__(1);\nvar perspectiveConversion = __webpack_require__(3);\nvar tick = __webpack_require__(4)();\n\nvar Wheel3D = function () {\n    function Wheel3D(picker, col, option, index) {\n        _classCallCheck(this, Wheel3D);\n\n        ///////////////////滚轮显示属性\n        //最大转角\n        this.maxAngle = 0;\n        //最小转角,设置可选项列表后需重新计算\n        this.minAngle = 0;\n        //滚轮的实际半径,因为有透视效果,所以滚轮实际半径比容器的高度的一半还小。根据勾股定理,计算得实际半径是容器高度的根号5分之1\n        this.radius = constant_1.default.WHEEL_HEIGHT / Math.sqrt(5);\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        this.visibleAngle = 0;\n        //获取0.01em的实际像素值\n        this.em = function () {\n            return Math.min(window.innerWidth, window.innerHeight) / 100;\n        };\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的转角,用于计算滚轮是否转动过\n        this.originalAngle = 0;\n        //一次拖动过程中滚轮被转动的最大角度\n        this.lastIndexAngle = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        this.changeMaxAngle = 0;\n        //当前滚轮转角\n        this.angle = 0;\n        //当前被选值的index\n        this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        this.isDraging = false;\n        //正在播放的刻度音\n        this.audio = null;\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n        ///////////////////主要属性\n        //picker对象\n        this.picker = picker;\n        //option对象\n        this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        this.index = index;\n        //转轮主体\n        this.dom = domUtil_1.default('<div class=\"picker-wheel3d\">' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '<ul></ul>' + '<div class=\"picker-label\"><span class=\"picker-text\"></span></div>' + '</div>').css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        this.contains = this.dom.find('ul');\n        ///////////////////滚轮显示属性\n        //计算标签可显示的角度的绝对值。因为透视关系,所以可见的标签角度小于90度\n        this.visibleAngle = 90 - Math.acos(this.radius / constant_1.default.WHEEL_HEIGHT * 2) / Math.PI * 180;\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchstart\", startDrag);\n        this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchmove\", drag);\n        this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        this.dom[0].addEventListener(\"touchend\", endDrag);\n        this.dom[0].addEventListener(\"mouseup\", endDrag);\n        this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //初始化标签\n        this.dom.find(\".picker-label\").css(\"transform\", \"translateZ(\" + this.radius / 100 + \"em) scale(0.75)\");\n        //设置标签\n        this.setSuffix(col.suffix);\n        this.setPrefix(col.prefix);\n        this.setOptions(col.options, null, true);\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel3D, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalAngle = this.angle;\n            this.changeMaxAngle = 0;\n            this.lastIndexAngle = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算转角变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeAngle = (perspectiveConversion(this.lastY, this.radius, constant_1.default.WHEEL_HEIGHT) - perspectiveConversion(y, this.radius, constant_1.default.WHEEL_HEIGHT)) / Math.PI * 180;\n            var angle = changeAngle + this.angle;\n            //记录滚轮滚动的最大转角\n            this.changeMaxAngle = Math.max(Math.abs(this.originalAngle - angle), this.changeMaxAngle);\n            //记录当前角度\n            this.setAngle(angle);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeAngle) {\n                this.speed = changeAngle / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的angle。之所以乘4是根据偏移效果经验得到的\n            var changeAngle = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var angle = changeAngle + this.angle;\n            //根据角度计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByAngle(angle);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小转角\n            this.maxAngle = constant_1.default.WHEEL_ITEM_ANGLE * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label,\n\n            //显示标签的dom的高度,要求根据wheelItemAngle计算,使各个标签dom的边缘刚好挨在一起,确保没有空细\n            height = this.radius * Math.PI * constant_1.default.WHEEL_ITEM_ANGLE / 180;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(角度)\n                var li = domUtil_1.default(\"<li></li>\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var angle = constant_1.default.WHEEL_ITEM_ANGLE * -index;\n                //为了解决3d放大后，文字模糊的问题，故采用zoom=2的方案，所以li的尺寸方面，统一缩小一半\n                li.css(\"transform\", \"rotateX(\" + angle + \"deg) translateZ(\" + that.radius / 100 + \"em) scale(0.75)\").css(\"padding\", height / 5.9 / 100 + \"em 0\").css(\"height\", height / 100 + \"em\").css(\"line-height\", height / 100 + \"em\");\n                //将标签的角度保存到其dom中\n                li.data(\"angle\", angle);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxAngle < 1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            //刷新标签\n            this.flushLabel();\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 获得用户可选的标签\r\n        */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var angle = this.calcAngleBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _angle = animationUtil_1.default.easeOut(start, that.angle, angle - that.angle, during);\n                    if (Math.abs(_angle - angle) < 1) {\n                        _angle = angle;\n                    }\n                    that.setAngle(_angle);\n                    if (_angle != angle) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setAngle(angle);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定角度,自动设定标签的各个位置\r\n        * @param {number} angle\t\t要转到的角度\r\n        * @returns {number}\t\t\t修正后的角度,即最终的实际角度\r\n        */\n\n    }, {\n        key: \"setAngle\",\n        value: function setAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = this.rangeAngle(angle);\n            // 如果角度变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexAngle = this.lastIndexAngle;\n                var index = this.calcSelectedIndexByAngle(angle);\n                if (lastIndexAngle != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexAngle = index;\n            }\n            this.contains.css(\"transform\", \"rotateX(\" + angle + \"deg)\");\n            this.angle = angle;\n            this.flushLabel();\n            return angle;\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByAngle\",\n        value: function calcSelectedIndexByAngle(angle) {\n            angle = this.rangeAngle(angle);\n            return Math.round(Math.abs(angle / constant_1.default.WHEEL_ITEM_ANGLE));\n        }\n        /**\r\n        * 通过角度计算被选项的id\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcAngleBySelectedIndex\",\n        value: function calcAngleBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_ANGLE;\n        }\n        /**\r\n        * 限制转角超过极限值\r\n        * @param angle {number}\t\t要计算的角度\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeAngle\",\n        value: function rangeAngle(angle) {\n            //修正转角,要求转角不能大于maxAngle,不能小于minAngle\n            angle = Math.max(this.minAngle, angle);\n            angle = Math.min(this.maxAngle, angle);\n            return angle;\n        }\n        /**\r\n        * 刷新各个标签的状态,确定应该显示哪些标签\r\n        */\n\n    }, {\n        key: \"flushLabel\",\n        value: function flushLabel() {\n            var that = this;\n            this.dom.find(\"li\").each(function (index, li) {\n                li = domUtil_1.default(li);\n                var angle = li.data(\"angle\") + that.angle;\n                if (angle > that.visibleAngle || angle < -that.visibleAngle) {\n                    if (li.css(\"display\") != \"none\") {\n                        li.css(\"display\", \"none\");\n                    }\n                } else {\n                    if (li.css(\"display\") != \"block\") {\n                        li.css(\"display\", \"block\");\n                    }\n                }\n            });\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n    }]);\n\n    return Wheel3D;\n}();\n\nexports.Wheel3D = Wheel3D;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n(function (global, factory) {\r\n\t\"use strict\"\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\tmodule.exports = factory;\r\n\t} else {\r\n\t\tglobal.$ = factory(global.document);\r\n\t}\r\n})(typeof window !== \"undefined\" ? window : this, function (document) {\r\n\r\n\t//用于插入使用的DocumentFragment\r\n\tvar fragment = document.createDocumentFragment();\r\n\r\n\t//将html解析为my-jquery对象\r\n\tfunction buildHTML(selector) {\r\n\t\tselector = selector.trim();\r\n\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\tif(selector[0] === \"<\"){\r\n\t\t\t//用于使用innerHTML生成dom的div\r\n\t\t\tvar div = document.createElement(\"DIV\");\r\n\t\t\tdiv.innerHTML = selector;\r\n\t\t\treturn $(div.children);\r\n\t\t} else {\r\n\t\t\treturn $([]);\r\n\t\t}\r\n\t}\r\n\r\n\t//将html解析为fragment对象\r\n\tfunction buildFragment(dom) {\r\n\t\tvar dom = $(dom);\r\n\t\tfragment.textContent = \"\";\r\n\t\tdom.each(function (i, item) {\r\n\t\t\tfragment.appendChild(item);\r\n\t\t})\r\n\t\treturn fragment;\r\n\t}\r\n\r\n\t//将各种要插入对象做成一个buildFragment,根据fn插入\r\n\tfunction insertDom(targets, dom, fn) {\r\n\t\t//如果插入到的元素是多个,克隆之后再插入\r\n\t\ttargets.each(function (i, item) {\r\n\t\t\tif(i != targets.length-1){\r\n\t\t\t\tfn(this, buildFragment(dom.clone()));\r\n\t\t\t} else {\r\n\t\t\t\tfn(this, buildFragment(dom));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t//一个模板,用于生成setter和getter重载函数\r\n\tfunction access(myjq, setter, getter, key, value) {\r\n\t\t//是否是setter方法,如果是setter方法,value不能是undefined\r\n\t\treturn value === undefined ? (myjq.length ? getter(myjq[0], key) : undefined) : myjq.each(function (index, item) {\r\n\t\t\treturn setter(item, key, value)\r\n\t\t})\r\n\t}\r\n\r\n    //短横线隔开式命名转驼峰命名\r\n    function toCamelCase(name) {\r\n        return name.replace(/-\\S/g, function (splitChar) {\r\n            return splitChar[1].toUpperCase();\r\n        });\r\n    }\r\n\r\n    //克隆dom\r\n\tfunction domClone(item, hasSystem) {\r\n\t\tvar dom = item.cloneNode(true);\r\n\t\thasSystem && item[dataKey] && (dom[dataKey] = item[dataKey]);\r\n\r\n\t\treturn dom;\r\n\t}\r\n\r\n\t//删除dom时候使用\r\n\tfunction clearData(item) {\r\n\t\tvar arr;\r\n\t\tif(item.nodeType == 1){\r\n\t\t\tdelete item[dataKey];\r\n\t\t\tarr = item.children;\r\n\t\t} else if(item && item.length != null){\r\n\t\t\tarr = item;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor(var i; i < arr.length; i++){\r\n\t\t\tclearData(arr[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t//防止冲突的id\r\n\tvar $$mjid = (\"\" + Date.now() +  Math.random()).replace('.', '');\r\n\t//dom缓存的key\r\n\tvar dataKey = \"$$mjid\" + $$mjid\r\n\r\n\tvar $ = function(selector){\r\n\t\treturn new $.fn.init(selector);\r\n\t}\r\n\r\n\t$.fn = $.prototype = {\r\n\t\t//唯一id\r\n\t\t$$mjid : $$mjid,\r\n\r\n\t\t//jquery对象原型\r\n\t\tinit : function(selector){\r\n\r\n\t\t\t//如果没有选择器，直接返回\r\n\t\t\tif(!selector){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tif(typeof selector == \"string\"){\r\n\t\t\t\t//如果是字符串，表示可能是选择器，或者是构建字符串\r\n\t\t\t\tselector = selector.trim();\r\n\t\t\t\t//如果是构建字符串，需要判断是否是<>格式，如果不是表示是选择器\r\n\t\t\t\tif(selector[0] === \"<\"){\r\n\t\t\t\t\treturn $(buildHTML(selector));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//如果不是，说明是选择器，直接选择\r\n\t\t\t\t\tvar doms = document.querySelectorAll(selector);\r\n\r\n\t\t\t\t\t//递归调用$，从新封装一次\r\n\t\t\t\t\treturn $(doms);\r\n\t\t\t\t}\r\n\t\t\t} else if(typeof selector == \"object\" && !isNaN(selector[\"length\"])){\r\n\t\t\t\t//类似数组就表示是数组。遍历数组或者是$.init对象，如果里面是dom元素封装返回\r\n\t\t\t\tfor(var i = 0,length = 0; i < selector.length; i++){\r\n\t\t\t\t\tvar dom = selector[i];\r\n\t\t\t\t\tif(dom && dom.nodeType == 1){\r\n\t\t\t\t\t\tthis[length] = dom;\r\n\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.length = length;\r\n\t\t\t\treturn this;\r\n\t\t\t} else if(selector.nodeType){\r\n\t\t\t\t//如果本身就是一个dom元素，直接封装返回\r\n\t\t\t\tthis.length = 1;\r\n\t\t\t\tthis[0] = selector;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//使init变为类数组对象\r\n\t\tlength : 0,\r\n\r\n\t\t//模仿each\r\n\t\teach : function (fn) {\r\n\t\t\tfor(var i =0; i < this.length; i++){\r\n\t\t\t\tif(typeof fn == 'function' && fn.call(this[i], i, this[i]) === false){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\teq: function(i){\r\n\t\t\treturn $(this[i]);\r\n\t\t},\r\n\r\n\t\t//往集合增加一个dom\r\n\t\tadd: function (item) {\r\n\t\t\tif(item && item.nodeType == 1){\r\n\t\t\t\tthis[this.length++] = item;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t//在某个节点下面找div\r\n\t\tfind: function(selector){\r\n\t\t\treturn access(this,null,function (dom, selector) {\r\n\t\t\t\treturn $(dom.querySelectorAll(selector));\r\n\t\t\t},selector)\r\n\t\t},\r\n\r\n\t\t//用于将文档增添于\r\n\t\tappend : function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tappendTo: function(parent){\r\n\t\t\t$(parent).append(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprepend: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.childNodes.length ?  parent.insertBefore(child, parent.childNodes[0]) : parent.appendChild(child);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tprependTo: function(parent){\r\n\t\t\t$(parent).prepend(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tafter: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tif(parent.parentNode.lastChild == parent){\r\n\t\t\t\t\tparent.parentNode.appendChild(child);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.parentNode.insertBefore(child, parent.nextSibling);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertAfter: function(parent){\r\n\t\t\t$(parent).after(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tbefore: function(child){\r\n\t\t\tinsertDom(this, $(child), function ( parent,child) {\r\n\t\t\t\tparent.parentNode.insertBefore(child, parent);\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tinsertBefore: function(parent){\r\n\t\t\t$(parent).before(this);\r\n\t\t\treturn $(this[0]);\r\n\t\t},\r\n\t\t\r\n\t\tclone: function () {\r\n\t\t\tvar arr = [];\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\tarr.push(domClone(item, true));\r\n\t\t\t})\r\n\t\t\treturn $(arr);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * 删除dom\r\n\t\t */\r\n\t\tremove: function () {\r\n\t\t\tthis.each(function (i, item) {\r\n\t\t\t\titem.parentElement && item.parentElement.removeChild(item)\r\n\t\t\t})\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdata: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tif(!item[dataKey]){\r\n\t\t\t\t\titem[dataKey] = {};\r\n\t\t\t\t}\r\n\t\t\t\titem[dataKey][key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[dataKey] && item[dataKey][key];\r\n\t\t\t}, key, value);\r\n\t\t},\r\n\r\n\t\tattr: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.setAttribute(key, value)\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.getAttribute(key);\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\tremoveAttr: function (key) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(key) {\r\n\t\t\t\t\titem.removeAttr(key);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\taddClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.add(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tremoveClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\titem.classList.remove(className)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\thasClass: function (className) {\r\n\t\t\treturn this.length ? this[0].classList.contains(className) : false;\r\n\t\t},\r\n\r\n\t\ttoggleClass: function (className) {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(className) {\r\n\t\t\t\t\tif(item.classList.contains(className)){\r\n\t\t\t\t\t\titem.classList.remove(className);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\titem.classList.add(className);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tprop: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem[key] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item[key];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\r\n\t\thtml: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\tclearData(item.children || {length : 0});\r\n\t\t\t\titem.innerHTML = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.innerHTML;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\ttext: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.textContent = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.textContent;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\tval: function(value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.value = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.value;\r\n\t\t\t}, \"-\", value)\r\n\t\t},\r\n\t\thide: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\tif(item.style.display){\r\n\t\t\t\t\t$(item).data(\"my-jquery-style-display\",item.style.display);\r\n\t\t\t\t}\r\n\t\t\t\titem.style.display=\"none\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tshow: function() {\r\n\t\t\treturn this.each(function (i, item) {\r\n\t\t\t\titem.style.display= $(item).data(\"my-jquery-style-display\") || \"\";\r\n\t\t\t})\r\n\t\t},\r\n\t\tcss: function (key, value) {\r\n\t\t\treturn access(this, function (item, key, value) {\r\n\t\t\t\titem.style[toCamelCase(key)] = value;\r\n\t\t\t}, function (item, key) {\r\n\t\t\t\treturn item.style[toCamelCase(key)];\r\n\t\t\t}, key, value)\r\n\t\t},\r\n\r\n\t\ton: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                if(typeof fn != 'function'){\r\n                \treturn;\r\n                }\r\n\r\n            \t//注册的函数\r\n            \tvar cacheFn = function (event) {\r\n\t\t\t\t\tif(fn.call(this, event) === false){\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t}\r\n                }\r\n                cacheFn.fn = fn;\r\n\r\n                //缓存该函数\r\n                var cacheEvent = $(item).data(\"my-jquery-event-cache\") || {};\r\n                cacheEvent[eventName] = cacheEvent[eventName] || [];\r\n                cacheEvent[eventName].push(cacheFn)\r\n\r\n                this.addEventListener(eventName, cacheFn, false);\r\n                $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n            })\r\n\t\t},\r\n\t\toff: function(eventName, fn){\r\n            return this.each(function (i, item) {\r\n                var cacheEvent = $(this).data(\"my-jquery-event-cache\");\r\n\r\n                if(!cacheEvent)\r\n                \treturn;\r\n\r\n                var self = this;\r\n                if(cacheEvent[eventName] instanceof Array){\r\n                \tvar tempArr = [];\r\n                    cacheEvent[eventName].forEach(function (cacheFn) {\r\n                        if(typeof fn == 'function'){\r\n                        \tif( fn == cacheFn.fn){\r\n                                self.removeEventListener(eventName, cacheFn, false);\r\n                            } else {\r\n                                tempArr.push(cacheFn)\r\n                            }\r\n                        } else {\r\n                            self.removeEventListener(eventName, cacheFn, false);\r\n\t\t\t\t\t\t}\r\n                    })\r\n\r\n                    cacheEvent[eventName] = tempArr;\r\n                    $(this).data(\"my-jquery-event-cache\", cacheEvent)\r\n                }\r\n            })\r\n\r\n\t\t},\r\n\t\ttoggle: function(eventName){\r\n            return this.each(function (i, item) {\r\n            \tif(typeof this[eventName] == 'function'){\r\n                    this[eventName]();\r\n\t\t\t\t}\r\n            })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t$.fn.init.prototype = $.fn;\r\n\r\n\treturn $;\r\n})\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\r\n * Created by njz on 16/11/29.\r\n */\n\n// 对动画的封装,支持requestAnimationFrame使用requestAnimationFrame封装。\n// 若览器不支持requestAnimationFrame情况下的回退，回退到使用setTmeout的情况。\nvar requestAnimationFrame, cancelAnimationFrame;\nvar lastTime = 0;\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n    cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\nrequestAnimationFrame = requestAnimationFrame || window.requestAnimationFrame || function (callback, element) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n    }, timeToCall);\n    lastTime = currTime + timeToCall;\n    return id;\n};\ncancelAnimationFrame = cancelAnimationFrame || window.cancelAnimationFrame || window.cancelRequestAnimationFrame || function (id) {\n    clearTimeout(id);\n};\n\nmodule.exports = {\n    /**\r\n     * 动画开始函数\r\n     * @param fn\r\n     * @returns {number}        动画id\r\n     */\n    startAnimation: function startAnimation(fn) {\n        return requestAnimationFrame(fn);\n    },\n    /**\r\n     * 动画终止函数\r\n     * @param animationId       动画id\r\n     */\n    stopAnimation: function stopAnimation(animationId) {\n        cancelAnimationFrame(animationId);\n    },\n    easeIn: function easeIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n    },\n    /**\r\n     * 淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeOut: function easeOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    },\n    /**\r\n     * 淡入并淡出效果\r\n     * @param t\r\n     * @param b\r\n     * @param c\r\n     * @param d\r\n     * @returns {*}\r\n     */\n    easeInOut: function easeInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n        return -c / 2 * (--t * (t - 2) - 1) + b;\n    }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = { \"0\": 0, \"1\": 0.006180474730027776, \"2\": 0.012361758667979887, \"3\": 0.01854466178595427, \"4\": 0.024729995586343003, \"5\": 0.030918573871856408, \"6\": 0.03711121352142655, \"7\": 0.043308735273995536, \"8\": 0.04951196452223301, \"9\": 0.05572173211827738, \"10\": 0.06193887519365582, \"11\": 0.06816423799561012, \"12\": 0.07439867274213974, \"13\": 0.08064304049816978, \"14\": 0.08689821207536214, \"15\": 0.0931650689582126, \"16\": 0.09944450425921704, \"17\": 0.1057374237060475, \"18\": 0.11204474666385271, \"19\": 0.11836740719599605, \"20\": 0.12470635516675682, \"21\": 0.13106255738976524, \"22\": 0.13743699882620672, \"23\": 0.1438306838371266, \"24\": 0.1502446374944947, \"25\": 0.15667990695605222, \"26\": 0.163137562909363, \"27\": 0.16961870109094018, \"28\": 0.1761244438868085, \"29\": 0.18265594202141244, \"30\": 0.189214376342388, \"31\": 0.1958009597093892, \"32\": 0.20241693899591295, \"33\": 0.20906359721390222, \"34\": 0.21574225577183714, \"35\": 0.2224542768780669, \"36\": 0.22920106610229693, \"37\": 0.23598407510944647, \"38\": 0.24280480458155373, \"39\": 0.24966480734504126, \"40\": 0.2565656917224997, \"41\": 0.26350912513022323, \"42\": 0.2704968379450743, \"43\": 0.27753062766690556, \"44\": 0.28461236340577195, \"45\": 0.2917439907265723, \"46\": 0.298927536887646, \"47\": 0.30616511651426775, \"48\": 0.3134589377530486, \"49\": 0.3208113089590395, \"50\": 0.32822464597399087, \"51\": 0.3357014800618854, \"52\": 0.3432444665767064, \"53\": 0.3508563944476478, \"54\": 0.35854019657886727, \"55\": 0.3662989612747276, \"56\": 0.37413594481766604, \"57\": 0.38205458534478537, \"58\": 0.39005851819157766, \"59\": 0.3981515928975172, \"60\": 0.4063378920994586, \"61\": 0.41462175257587425, \"62\": 0.42300778874928274, \"63\": 0.4315009190073606, \"64\": 0.4401063952672662, \"65\": 0.4488298362852176, \"66\": 0.45767726530766856, \"67\": 0.4666551527757603, \"68\": 0.47577046493656705, \"69\": 0.4850307193901132, \"70\": 0.4944440488195467, \"71\": 0.5040192744255141, \"72\": 0.5137659909310855, \"73\": 0.523694665462527, \"74\": 0.5338167531736872, \"75\": 0.5441448332086339, \"76\": 0.5546927695451231, \"77\": 0.5654759025098686, \"78\": 0.5765112784180985, \"79\": 0.5878179270265199, \"80\": 0.5994171995371129, \"81\": 0.6113331840998124, \"82\": 0.6235932216642447, \"83\": 0.6362285534378791, \"84\": 0.6492751433974548, \"85\": 0.6627747373240171, \"86\": 0.6767762470698537, \"87\": 0.6913375909489355, \"88\": 0.7065281883018284, \"89\": 0.7224324166263504, \"90\": 0.7391545276252866, \"91\": 0.7568258524516188, \"92\": 0.7756157498195769, \"93\": 0.7957489855645078, \"94\": 0.8175348626997212, \"95\": 0.8414195586288256, \"96\": 0.8680892494981647, \"97\": 0.8987014263951989, \"98\": 0.935517870959519, \"99\": 0.9843911534692572, \"100\": 1.1071487177940906 };\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"data:audio/mpeg;base64,SUQzAwAAAAACPVRBTEIAAAABAAAAVENPTgAAAAEAAABUSVQyAAAAAQAAAFRQRTEAAAABAAAAVFJDSwAAAAEAAABUWUVSAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAAEAAAGuQCPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+urq6urq6urq6urq6urq6urq6urq6urq6u6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6/////////////////////////////////8AAAAeTEFNRTMuOTlyBJwAAAAALhMAADUgJANyQQABrgAABrkfUWHWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//vAxAAAA5gBQ3QAAArvJu6/M4BIhIKgoegEQ8/8DMz/Pgf+Yf8BwB+Z+b+ADgDw/8+o7VqAHMDBTAEFQenlPGADeAWECp4LYcVu9VS9CSRlFhkxw1oMkWM4jYWZOwux2kYYKQWsQ/2ZaUwdEtrLj/YqSyOwMh4qeJUr7XMoYikU+IQ0Fl0qjk87jLrdekgfWb+RhON84zDsakKgs3Zou0k5nT9ylE43Waiz7cwfWGpbM3rXMP1hzuFJScikNSFdLvQXPWYEqZ4yq3KaWd1zPOx//nn+cHSnUZqZYyWap5ZWy7/41ioa/pDolQNStZm24myAA0oAUsytJS4qVtLyfMrafUJqVaJSmQrtBIraqcZqrtu95KNI5Tb+dX71Vet2iXNymBj6gporC+5XVsSQTKC2K/35teC8/0KL/Ff/DEEyiT8rZKIyGuoyeRCzI7wpna5Q2KpYgzmMbLM2XlUCNv/oaWZSlouqkB3Zb7aW79MPu16Zr2jv1vKHhqqZmIaHhnb/SsKAAAAAnUXYNay0jZfhQ+kLcL/BQ6ZSJ0DwHKktA4gjBzi4QMDNC+5PGxEWWbh40wv+9jpbNzzEOEnImHyHThqblErKOHjUUkLlFjHeHR6Nq1opOiMmMmikPRZ/u/x0Cth2kTD7P+kpMxMPLuzvDuzxt5IyAAAAAT4RIEE6AqAAYh4w4CYYcQCEJbMcTOkDjlQ4CXbZKsEICzN+AkpphSMMLBX4hBMIAvInATJvUotAhWGpsGVGrKHEJUEr6wj7S4DFigYJAEKqhw1KjypsnuPCUiwz6RR9m+iRb5Fxo0DuEj06kR1A1DDs5jIKWtturEoLjFDV5jvHH8cef///1e28q4udUp5b876l8u22Gw9HwtDYAAAAAADQL1KAwBl18Zc1OLY7qQ/Dtb/YVtTHz+dBb4SUL6wf9iQ0E6aaWnOVk//Zl9dJdnet0b1//9sX76evxGZ3NZ//+zDE9oBKCIFfvPMACOsSai6eIAXrTEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+3DE9IAOXMFX+ZiAAoaaKj81kABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//sQxPwACcCNT7mngAAAAD/DgAAEVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVUQUcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/w==\"\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\r\n * 滚轮类,是显示选择器可选项的滚轮体，3D模式型的，有透视效果\r\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar domUtil_1 = __webpack_require__(0);\nvar animationUtil_1 = __webpack_require__(2);\nvar constant_1 = __webpack_require__(1);\nvar perspectiveConversion = __webpack_require__(3);\nvar tick = __webpack_require__(4)();\n\nvar Wheel = function () {\n    function Wheel(picker, col, option, index) {\n        _classCallCheck(this, Wheel);\n\n        ///////////////////滚轮显示属性\n        //最大位移\n        this.maxDistance = 0;\n        //最小位移,设置可选项列表后需重新计算\n        this.minDistance = 0;\n        //获取0.01em的实际像素值\n        this.em = function () {\n            return Math.min(window.innerWidth, window.innerHeight) / 100;\n        };\n        //获得控件到body最顶端的距离,计算触摸事件的offsetY时候使用\n        this.offsetTop = 0;\n        ////////////////////滚动属性\n        //滚轮转动前初始的位移,用于计算滚轮是否转动过\n        this.originalDistance = 0;\n        //一次拖动过程中滚轮被转动的最大位移\n        this.lastIndexDistance = 0;\n        //当前的刻度,计算发声时候会用到。发声要进过一个刻度线或者达到一个新刻度新才会发声。所以需要记录上一次的刻度线。\n        this.changeMaxDistance = 0;\n        //当前滚轮位移\n        this.distance = 0;\n        //当前被选值的index\n        this.selectedIndex = -1;\n        //记录惯性滑动动画的id\n        this.animationId = -1;\n        //速度，供触摸离开时候的惯性滑动动画使用\n        this.speed = 0;\n        //当前时间戳,主要是计算转动速度使用的\n        this.timeStamp = 0;\n        //记录上一次触摸节点的offsetY,主要是是计算转动速度使用的\n        this.lastY = 0;\n        //是否开始触摸,主要给鼠标事件使用\n        this.isDraging = false;\n        //正在播放的刻度音\n        this.audio = null;\n        ////////////////////可选项属性\n        //可选项列表\n        this.list = [];\n        //根据值生成的hashmap,主要是为了快速获得value对应可选项的index\n        this.valueHashMap = {};\n        ////////////////////事件\n        this.onSelectItemCallbackList = [];\n        ///////////////////主要属性\n        //picker对象\n        this.picker = picker;\n        //option对象\n        this.option = option;\n        //记录当前滚轮是容器中第几个滚轮\n        this.index = index;\n        //转轮主体\n        this.dom = domUtil_1.default(\"<div class=\\\"picker-wheel\\\">\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n                <ul></ul>\\n                <div class=\\\"picker-label\\\"><span class=\\\"picker-text\\\"></span></div>\\n            </div>\").css('height', constant_1.default.WHEEL_HEIGHT / 100 + 'em');\n        //转轮上面标签的容器，同时也是转动的轴\n        this.contains = this.dom.find('ul');\n        this.setDistance(0);\n        ////////////////////可选项属性\n        //如果items数组里的值是对象,其中显示的key\n        this.labelKey = col.labelKey;\n        //如果items数组里的值是对象,其中值的key\n        this.itemValueKey = col.valueKey;\n        ////////////////////注册dom事件\n        var that = this;\n        //注册拖拽开始事件\n        function startDrag(event) {\n            //计算offsetTop,为计算触摸事件的offset使用\n            var target = event.currentTarget;\n            that.offsetTop = 0;\n            while (target) {\n                that.offsetTop += target.offsetTop;\n                var target = target.parentElement;\n            }\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.startDrag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchstart\", startDrag);\n        this.dom[0].addEventListener(\"mousedown\", startDrag);\n        //注册拖拽事件\n        function drag(event) {\n            var offsetY = event.touches ? event.touches[0].clientY - that.offsetTop : event.clientY - that.offsetTop;\n            that.drag(offsetY);\n        }\n        this.dom[0].addEventListener(\"touchmove\", drag);\n        this.dom[0].addEventListener(\"mousemove\", drag);\n        //注册拖拽结束事件\n        function endDrag() {\n            that.endDrag();\n        }\n        this.dom[0].addEventListener(\"touchend\", endDrag);\n        this.dom[0].addEventListener(\"mouseup\", endDrag);\n        this.dom[0].addEventListener(\"mouseleave\", endDrag);\n        //设置标签\n        this.setSuffix(col.suffix);\n        this.setPrefix(col.prefix);\n        this.setOptions(col.options, null, true);\n    }\n    /**\r\n     * 开始拖拽\r\n     * @param {number} offsetY  当前用户手指(鼠标)的y坐标\r\n     */\n\n\n    _createClass(Wheel, [{\n        key: \"startDrag\",\n        value: function startDrag(offsetY) {\n            //记录触摸相关信息,为下一步计算用.计算时候,要将坐标系移至中心,并将单位转为em\n            this.lastY = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            this.timeStamp = Date.now();\n            this.isDraging = true;\n            this.offsetTop = this.dom[0].offsetTop;\n            this.originalDistance = this.distance;\n            this.changeMaxDistance = 0;\n            this.lastIndexDistance = this.selectedIndex;\n            for (var parent = this.dom[0].parentElement; parent; parent = parent.parentElement) {\n                this.offsetTop += parent.offsetTop;\n            }\n            //终止之前的动画\n            animationUtil_1.default.stopAnimation(this.animationId);\n        }\n        /**\r\n         * 拖拽\r\n         * @param {number} offsetY\t\t\t当前用户手指(鼠标)的y坐标\r\n         */\n\n    }, {\n        key: \"drag\",\n        value: function drag(offsetY) {\n            if (!this.isDraging) {\n                return;\n            }\n            //根据触摸位移(鼠标移动位移)计算位移变化量\n            //现将坐标系移植中心,并将单位转为vm\n            var y = (constant_1.default.WHEEL_HEIGHT / 2 - offsetY / this.em()) * -1;\n            //计算位移,因为z轴有透视,所以位移量不是真正的曲面的位移量,要做一次透视变换\n            var changeDistance = this.lastY - y;\n            var distance = changeDistance + this.distance;\n            //记录滚轮滚动的最大位移\n            this.changeMaxDistance = Math.max(Math.abs(this.originalDistance - distance), this.changeMaxDistance);\n            //记录当前位移\n            this.setDistance(distance);\n            //计算并记录速度\n            this.lastY = y;\n            if (changeDistance) {\n                this.speed = changeDistance / (Date.now() - this.timeStamp);\n            } else {\n                this.speed = 0;\n            }\n            this.timeStamp = Date.now();\n        }\n        /**\r\n         * 拖拽结束\r\n         */\n\n    }, {\n        key: \"endDrag\",\n        value: function endDrag() {\n            if (!this.isDraging) {\n                return;\n            }\n            //速度*4,做均减少运动,计算滚动后的Distance。之所以乘4是根据偏移效果经验得到的\n            var changeDistance = this.speed * Math.abs(this.speed) * 8 * constant_1.default.WHEEL_TRANSITION_TIME;\n            var distance = changeDistance + this.distance;\n            //根据位移计算最终的被选值\n            var selectedIndex = this.calcSelectedIndexByDistance(distance);\n            //开启动画,选中被选中\n            this.selectIndex(selectedIndex, true);\n            //计算完成,清空速度相关变量,并去除之前的动画效果\n            this.isDraging = false;\n            this.lastY = 0;\n            this.speed = 0;\n        }\n        /////////////////////////////////设置相关\n        /**\r\n         * 生成用户可选的标签\r\n         * @param {any[]} list                  用户可选项数组\r\n         * @param {*} selectedValue             默认值\r\n         * @param {boolean} [isInti=false]      是否是初始化,初始化不执行设置默认值操作\r\n         */\n\n    }, {\n        key: \"setOptions\",\n        value: function setOptions(list, selectedValue) {\n            var isInti = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var that = this;\n            list = list || [];\n            if (Array.isArray(list)) {\n                //清空容器\n                that.contains.html(\"\");\n                this.list = list;\n            } else {\n                throw new TypeError(\"list is not a array.\");\n            }\n            //计算valueHashMap\n            this.valueHashMap = {};\n            //计算最小位移\n            this.maxDistance = constant_1.default.WHEEL_ITEM_HIGHT * Math.max(0, this.list.length - 1);\n            //生成滚轮的标签\n            //标签的index\n            var i = 0,\n\n            //标签显示值\n            label;\n            this.list.forEach(function (item, index) {\n                //如果是对象,取labelKey对应值显示。否则直接显示它本身\n                if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) === 'object') {\n                    label = item[that.labelKey];\n                    that.valueHashMap[item[that.itemValueKey]] = i;\n                } else {\n                    label = item;\n                    that.valueHashMap[item] = i;\n                }\n                //创建label的显示dom,并计算他在容器中的位置(位移)\n                var li = domUtil_1.default(\"<li></li>\").css('top', constant_1.default.WHEEL_ITEM_HIGHT / 100 * i + \"em\");\n                li.append(domUtil_1.default('<span class=\"picker-text\"></span>').text(label));\n                var distance = constant_1.default.WHEEL_ITEM_HIGHT * -index;\n                //将标签的位移保存到其dom中\n                li.data(\"distance\", distance);\n                //将标签的index保存到其dom中\n                li.data(\"index\", i);\n                //将标签的dom放到contains上,contains的事件全部委托于容器,即标签不监听事件\n                that.contains.append(li);\n                //增加点击选择功能\n                var clickHandle = function clickHandle(event) {\n                    if (that.changeMaxDistance < 0.1) {\n                        //计算完成,清空速度相关变量,并去除之前的动画效果\n                        that.isDraging = false;\n                        that.lastY = 0;\n                        that.speed = 0;\n                        that.selectIndex(index, true);\n                        event.stopPropagation();\n                        event.preventDefault();\n                    }\n                };\n                li[0].addEventListener('mouseup', clickHandle);\n                li[0].addEventListener('touchend', clickHandle);\n                i++;\n            });\n            if (isInti) {\n                if (list.length > 0) {\n                    this.selectedIndex = 0;\n                    if (_typeof(list[0]) === 'object') {\n                        this.selectedValue = this.list[0][this.itemValueKey];\n                    } else {\n                        this.selectedValue = this.list[0];\n                    }\n                } else {\n                    this.selectedIndex = -1;\n                    this.selectedValue = undefined;\n                }\n                return;\n            }\n            //设置被选值。如果用户给定被选值,使用给定被选值。如果没有且之前有被选值,并仍在新options里面,保存之前的值。都没有返回0\n            if (list.length > 0) {\n                if (selectedValue != null && this.valueHashMap[selectedValue] != null) {\n                    this.selectOption(selectedValue);\n                } else if (this.valueHashMap[this.selectedValue] != null) {\n                    this.selectOption(this.selectedValue);\n                } else {\n                    this.selectIndex(0);\n                }\n            } else {\n                this.selectedIndex = -1;\n                this.selectedValue = undefined;\n            }\n        }\n        /**\r\n        * 获得用户可选的标签\r\n        */\n\n    }, {\n        key: \"getOptions\",\n        value: function getOptions() {\n            return this.list;\n        }\n        /**\r\n        * 给定指定标签的值,选择指定标签\r\n        */\n\n    }, {\n        key: \"selectOption\",\n        value: function selectOption(value) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            //如果valueHashMap里面没有value,表示没有这个标签,否则自动选中这个标签\n            if (this.valueHashMap[value] != null) {\n                var index = this.valueHashMap[value];\n                this.selectIndex(index, showAnimation);\n            }\n        }\n        /**\r\n        * 给定指定备选标签的index,自动设定标签的各个位置\r\n        * @param index\t\t\t\t\t要选择的index\r\n        * @param showAnimation\t\t\t是否显示动画,如果显示动画,会用100帧来显示动画\r\n        */\n\n    }, {\n        key: \"selectIndex\",\n        value: function selectIndex(index) {\n            var showAnimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            var distance = this.calcDistanceBySelectedIndex(index);\n            animationUtil_1.default.stopAnimation(this.animationId);\n            if (showAnimation) {\n                //用50帧渲染动画,并使用easeOut,使其有匀减速效果\n                //当前帧数\n                var start = 0,\n\n                //总帧数\n                during = 50,\n                    that = this;\n                //动画渲染函数\n                var _run = function _run() {\n                    start++;\n                    var _Distance = animationUtil_1.default.easeOut(start, that.distance, distance - that.distance, during);\n                    if (Math.abs(_Distance - distance) < 1) {\n                        _Distance = distance;\n                    }\n                    that.setDistance(_Distance);\n                    if (_Distance != distance) {\n                        that.animationId = animationUtil_1.default.startAnimation(_run);\n                    } else {\n                        //记录下原有的index,确定选择是否发生了改变\n                        var oldSelectedIndex = that.selectedIndex;\n                        that.selectedIndex = index;\n                        that.selectedValue = that.list[index];\n                        if (_typeof(that.selectedValue) == 'object') {\n                            that.selectedValue = that.selectedValue[that.itemValueKey];\n                        }\n                        if (oldSelectedIndex != that.selectedIndex) that.toggleSelected(that.selectedIndex, that.selectedValue);\n                    }\n                };\n                //启动动画\n                that.animationId = animationUtil_1.default.startAnimation(_run);\n            } else {\n                //记录下原有的index,确定选择是否发生了改变\n                var oldSelectedIndex = this.selectedIndex;\n                //如果不显示动画,直接赋值\n                this.setDistance(distance);\n                this.selectedIndex = index;\n                this.selectedValue = this.list[index];\n                if (_typeof(this.selectedValue) == 'object') {\n                    this.selectedValue = this.selectedValue[this.itemValueKey];\n                }\n                if (oldSelectedIndex != this.selectedIndex) this.toggleSelected(this.selectedIndex, this.selectedValue);\n            }\n        }\n        /**\r\n        * 给定指定位移,自动设定标签的各个位置\r\n        * @param {number} distance\t\t要转到的位移\r\n        * @returns {number}\t\t\t修正后的位移,即最终的实际位移\r\n        */\n\n    }, {\n        key: \"setDistance\",\n        value: function setDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = this.rangeDistance(distance);\n            // 如果位移变化经过刻度,则放声\n            if (this.option.hasVoice && this.picker.visible) {\n                var lastIndexDistance = this.lastIndexDistance;\n                var index = this.calcSelectedIndexByDistance(distance);\n                if (lastIndexDistance != index) {\n                    if (this.option.hasVoice) {\n                        tick.play();\n                    }\n                }\n                this.lastIndexDistance = index;\n            }\n            this.contains.css(\"transform\", \"translateY(\" + (constant_1.default.WHEEL_HEIGHT / 2 - constant_1.default.WHEEL_ITEM_HIGHT / 2 - distance) / 100 + \"em)\");\n            this.distance = distance;\n            return distance;\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcSelectedIndexByDistance\",\n        value: function calcSelectedIndexByDistance(distance) {\n            distance = this.rangeDistance(distance);\n            return Math.round(Math.abs(distance / constant_1.default.WHEEL_ITEM_HIGHT));\n        }\n        /**\r\n        * 通过位移计算被选项的id\r\n        * @param Distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"calcDistanceBySelectedIndex\",\n        value: function calcDistanceBySelectedIndex(index) {\n            return index * constant_1.default.WHEEL_ITEM_HIGHT;\n        }\n        /**\r\n        * 限制位移超过极限值\r\n        * @param distance {number}\t\t要计算的位移\r\n        * @returns {number}\t\t    被选项id\r\n        */\n\n    }, {\n        key: \"rangeDistance\",\n        value: function rangeDistance(distance) {\n            //修正位移,要求位移不能大于maxDistance,不能小于minDistance\n            distance = Math.max(this.minDistance, distance);\n            distance = Math.min(this.maxDistance, distance);\n            return distance;\n        }\n        /**\r\n        * 获取被选值\r\n        */\n\n    }, {\n        key: \"getValue\",\n        value: function getValue() {\n            return this.selectedValue;\n        }\n        /////////////////////////////设置前缀后缀\n        /**\r\n        * 设置后缀\r\n        * @param text\t\t\t后缀显示的文本\r\n        */\n\n    }, {\n        key: \"setSuffix\",\n        value: function setSuffix(text) {\n            this.dom.find('.picker-label .picker-text').eq(1).text(text);\n        }\n        /**\r\n        * 设置前缀\r\n        * @param text\t\t\t前缀显示的文本\r\n        */\n\n    }, {\n        key: \"setPrefix\",\n        value: function setPrefix(text) {\n            this.dom.find('.picker-label .picker-text').eq(0).text(text);\n        }\n        /////////////////////////////wheel事件相关\n        /**\r\n        * 触发回调函数的接口\r\n        * @param index\t\t\t当前被选值的索引\r\n        * @param value\t\t\t当前被选值的值\r\n        */\n\n    }, {\n        key: \"toggleSelected\",\n        value: function toggleSelected(index, value) {\n            var _this = this;\n\n            this.onSelectItemCallbackList.forEach(function (fn) {\n                fn.call(_this, index, value);\n            });\n        }\n        /**\r\n         * 注册SelectItem的回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"addSelectItemListener\",\n        value: function addSelectItemListener(fn) {\n            this.onSelectItemCallbackList.push(fn);\n        }\n        /**\r\n         * 移除注册的SelectItem回调事件\r\n         * @param {{(index:number, value:any):void}} fn\r\n         */\n\n    }, {\n        key: \"removeSelectItemListener\",\n        value: function removeSelectItemListener(fn) {\n            this.onSelectItemCallbackList = this.onSelectItemCallbackList.filter(function (_fn) {\n                return _fn !== fn;\n            });\n        }\n        /**\r\n         * 销毁\r\n         */\n\n    }, {\n        key: \"destroy\",\n        value: function destroy() {\n            this.onSelectItemCallbackList = null;\n        }\n        ////////////////////////////DOM相关\n\n    }, {\n        key: \"getDOM\",\n        value: function getDOM() {\n            return this.dom;\n        }\n    }]);\n\n    return Wheel;\n}();\n\nexports.Wheel = Wheel;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    /**\r\n     * 兼容es7的assign方法，这样可以省略polyfill\r\n     * @param {object} target\r\n     * @param {...object[]} source\r\n     * @returns {object}\r\n     */\n    assign: function assign(target) {\n        for (var _len = arguments.length, source = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            source[_key - 1] = arguments[_key];\n        }\n\n        // 第一个参数为空，则抛错\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert first argument to object');\n        }\n        var to = Object(target);\n        // 遍历剩余所有参数\n        for (var i = 1; i < arguments.length; i++) {\n            var nextSource = arguments[i];\n            // 参数为空，则跳过，继续下一个\n            if (nextSource === undefined || nextSource === null) {\n                continue;\n            }\n            nextSource = Object(nextSource);\n            // 获取改参数的所有key值，并遍历\n            var keysArray = Object.keys(nextSource);\n            for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                var nextKey = keysArray[nextIndex];\n                var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                // 如果不为空\b且可枚举，则直接浅拷贝赋值\n                if (desc !== undefined && desc.enumerable) {\n                    to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n        return to;\n    }\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _domUtil = __webpack_require__(0);\n\nvar _domUtil2 = _interopRequireDefault(_domUtil);\n\nvar _constant = __webpack_require__(1);\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nvar _browserUtil = __webpack_require__(5);\n\nvar _browserUtil2 = _interopRequireDefault(_browserUtil);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//构建主框架\nfunction Frame(picker, option) {\n\n\t//picker对象\n\tthis.picker = picker;\n\t//option\n\tthis.option = option;\n\n\t//构建cover\n\tthis.cover = (0, _domUtil2.default)(\"<div class='my-picker-cover' style='z-index: \" + option.zIndex + \"'>\").hide();\n\n\tthis.frame = (0, _domUtil2.default)('<div class=\"picker picker-frame\" style=\"z-index: ' + (option.zIndex + 1) + '\">' + '<header class=\"picker-head\">' + '<a class=\"picker-btn-cancel\"><span class=\"picker-header-text\"></span></a>' + '<h4 class=\"picker-title\"><span class=\"picker-header-text\"></span></h4>' + '<span class=\"picker-selected\">已选0</span>' + '<a class=\"picker-btn-ok\"><span class=\"picker-header-text\"></span></a>' + '</header>' + '<div class=\"picker-body\"></div>' + '</div>').css('height', (_constant2.default.WHEEL_HEIGHT + 15) / 100 + \"em\").hide();\n\tthis.frame.find(\".picker-body\")[0].addEventListener('touchstart', function (event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t});\n\n\t//如果是3d透视模式，增加3d透视的样式\n\tif (!_browserUtil2.default.isIE() && this.option.isPerspective) {\n\t\tthis.frame.addClass('s-3d').find(\".picker-body\").css(\"perspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"webkitPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"mozPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\").css(\"msPerspective\", _constant2.default.WHEEL_HEIGHT / 100 + \"em\");\n\t}\n\n\t//设置标题按钮名\n\tthis.frame.find(\".picker-title .picker-header-text\").text(option.title);\n\tthis.frame.find(\".picker-btn-cancel .picker-header-text\").text(option.buttons[1] || '取消');\n\tthis.frame.find(\".picker-btn-ok .picker-header-text\").text(option.buttons[0] || '确定');\n\n\t(0, _domUtil2.default)(\"body\").append(this.frame).append(this.cover);\n\n\t//绑定主架的事件\n\tvar that = this;\n\tthis.frame.find(\".picker-btn-cancel\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onCancelClick == 'function') {\n\t\t\tthat.option.onCancelClick.call(that.picker);\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\tthis.frame.find(\".picker-btn-ok\").on(\"click\", function (event) {\n\t\tif (typeof that.option.onOkClick == 'function') {\n\t\t\tvar result = that.option.onOkClick.call(that.picker, picker.getValue());\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthat.picker.hide();\n\t});\n\n\tthis._resizeHandle = function () {\n\t\tthis.frame.css('fontSize', Math.min(document.documentElement.clientWidth, document.documentElement.clientHeight) + 'px');\n\t}.bind(this);\n\n\twindow.addEventListener('resize', this._resizeHandle);\n\tthis._resizeHandle();\n}\n\nFrame.prototype = {\n\t//显示cover\n\tshowCover: function showCover() {\n\t\tthis.cover.show();\n\t\tthis.cover.addClass('s-open');\n\t},\n\t//隐藏cover\n\thideCover: function hideCover() {\n\t\tthis.cover.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.cover.hide();\n\t\t}, 500);\n\t},\n\t//显示frame\n\tshowFrame: function showFrame() {\n\t\tthis.frame.show();\n\t\tthis.frame.addClass('s-open');\n\t},\n\t//显示frame\n\thideFrame: function hideFrame() {\n\t\tthis.frame.removeClass('s-open');\n\t\tvar that = this;\n\t\tsetTimeout(function () {\n\t\t\tthat.frame.hide();\n\t\t}, 500);\n\t},\n\tdom: function dom() {\n\t\treturn this.frame;\n\t},\n\tbody: function body() {\n\t\treturn this.frame.find('.picker-body');\n\t},\n\t//关闭\n\tclose: function close() {\n\t\tthis.remove();\n\t\twindow.removeEventListener('resize', this._resizeHandle);\n\t},\n\t//移除\n\tremove: function remove() {\n\t\tthis.frame.remove();\n\t}\n};\n\nmodule.exports = Frame;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=my-picker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/my-picker.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}